using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;

namespace ServerApp.Models
{
    public class SeedData
    {
        public static void SeedDatabase(DataContext context)
        {
            context.Database.Migrate();
            if(context.Companies.Count() == 0)
            {
                // Initializing Industries List Data Variable
                List<Industry> industriesItem = new List<Industry>();

                // Initializing Product Type (Product Type { Desktop, Website, Windows Service etc }) List Data Variable
                List<ProductType> productTypesItem = new List<ProductType>();

                //Defining and Inserting Industries Data
                industriesItem.Add(new Industry { Name = "AMC", Logo = "../../assets/AMC.png", ShortName = "AMC", Description = "Asset Management Company Industry" });
                industriesItem.Add(new Industry { Name = "BANK", Logo = "../../assets/BANK.png", ShortName = "BANK", Description = "Banking Industry" });
                industriesItem.Add(new Industry { Name = "Consultancy", Logo = "../../assets/CONSULTANCY.png", ShortName = "CONSULT", Description = "Consultancy Industry" });
                industriesItem.Add(new Industry { Name = "DFI", Logo = "../../assets/DFI.png", ShortName = "DFI", Description = "Depository Financial Institution Industry" });
                industriesItem.Add(new Industry { Name = "Insurance", Logo = "../../assets/INSURANCE.png", ShortName = "INSURANCE", Description = "Insurance Industry" });
                industriesItem.Add(new Industry { Name = "Morgrage", Logo = "../../assets/MORGRAGE.png", ShortName = "MORGRAGE", Description = "Morgrage Industry" });
                industriesItem.Add( new Industry { Name = "Agriculture", Logo = "../../assets/Agriculture.png".Trim().Replace(" ", "").ToUpper() + ".png", Description = "Agriculture Industry." });
                industriesItem.Add(new Industry { Name = "Forestry", Description = "Forestry Industry.", Logo = "../../assets/Forestry.png".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Fishing", Description = "Fishing Industry.", Logo = "Fishing".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Hunting", Description = "Hunting Industry.", Logo = "Hunting".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Mining", Description = "Mining Industry.", Logo = "Mining".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Quarrying", Description = "Quarrying Industry.", Logo = "Quarrying".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Oil and gas extraction", Description = "Oil and gas extraction Industry.", Logo = "Oil and gas extraction".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Support activities for mining and oil and gas extraction", Description = "Support activities for mining and oil and gas extraction Industry.", Logo = "Support activities for mining and oil and gas extraction".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Utilities", Description = "Utilities Industry.", Logo = "Utilities".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Electric power generation", Description = "Electric power generation Industry.", Logo = "Electric power generation".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Transmission", Description = "Transmission Industry.", Logo = "Transmission".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Distribution", Description = "Distribution Industry.", Logo = "Distribution".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Natural gas distribution", Description = "Natural gas distribution Industry.", Logo = "Natural gas distribution".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Water, sewage and other systems", Description = "Water, sewage and other system Industry.", Logo = "Water, sewage and other system".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Construction", Description = "Construction Industry.", Logo = "Construction".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Manufacturing", Description = "Manufacturing Industry.", Logo = "Manufacturing".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Food manufacturing and beverage manufacturing", Description = "Food manufacturing and beverage manufacturing Industry.", Logo = "Food manufacturing and beverage manufacturing".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Food manufacturing", Description = "Food manufacturing Industry.", Logo = "Food manufacturing".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Animal food manufacturing", Description = "Animal food manufacturing Industry.", Logo = "Animal food manufacturing".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Fruit and vegetable preserving and specialty food manufacturing", Description = "Fruit and vegetable preserving and specialty food manufacturing Industry.", Logo = "Fruit and vegetable preserving and specialty food manufacturing".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Dairy product manufacturing", Description = "Dairy product manufacturing Industry.", Logo = "Dairy product manufacturing".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Meat product manufacturing", Description = "Meat product manufacturing Industry.", Logo = "Meat product manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Seafood product preparation and packaging", Description = "Seafood product preparation and packaging Industry.", Logo = "Seafood product preparation and packaging".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Bakery and tortillas manufacturing", Description = "Bakery and tortillas manufacturing Industry.", Logo = "Bakery and tortillas manufacturing".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Beverage and tobacco product manufacturing", Description = "Beverage and tobacco product manufacturing Industry.", Logo = "Beverage and tobacco product manufacturing".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Beverage manufacturing", Description = "Beverage manufacturing Industry.", Logo = "Beverage manufacturing".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Tobacco manufacturing", Description = "Tobacco manufacturing Industry.", Logo = "Tobacco manufacturing".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Textile mills and textile product mills", Description = "Textile mills and textile product mills Industry.", Logo = "Textile mills and textile product mills".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Textile mills", Description = "Textile mills Industry.", Logo = "Textile mills".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Textile product mills", Description = "Textile product mills Industry.", Logo = "Textile product mills".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Clothing manufacturing", Description = "Clothing manufacturing Industry.", Logo = "Clothing manufacturing".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Cut and sew clothing manufacturing", Description = "Cut and sew clothing manufacturing Industry.", Logo = "Cut and sew clothing manufacturing".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Leather and allied product manufacturing", Description = "Leather and allied product manufacturing Industry.", Logo = "Leather and allied product manufacturing".Trim().Replace(" ", "").ToUpper() + ".png" });
                industriesItem.Add(new Industry { Name = "Wood product manufacturing", Description = "Wood product manufacturing Industry.", Logo = "Wood product manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Sawmills and wood preserving", Description = "Sawmills and wood preserving Industry.", Logo = "Sawmills and wood preserving".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Veneer, plywood and engineered wood product manufacturing", Description = "Veneer, plywood and engineered wood product manufacturing Industry.", Logo = "Veneer, plywood and engineered wood product manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Other wood product manufacturing", Description = "Other wood product manufacturing Industry.", Logo = "Other wood product manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Paper manufacturing", Description = "Paper manufacturing Industry.", Logo = "Paper manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Pulp, paper, and paperboard mills", Description = "Pulp, paper, and paperboard mills Industry.", Logo = "Pulp, paper, and paperboard mills".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Converted paper product manufacturing", Description = "Converted paper product manufacturing Industry.", Logo = "Converted paper product manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Printing and related support activities", Description = "Printing and related support activities Industry.", Logo = "Printing and related support activities".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Petroleum and coal product manufacturing", Description = "Petroleum and coal product manufacturing Industry.", Logo = "Petroleum and coal product manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Chemical manufacturing", Description = "Chemical manufacturing Industry.", Logo = "Chemical manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Chemical manufacturing except pharmaceutical manufacturing", Description = "Chemical manufacturing except pharmaceutical manufacturing Industry.", Logo = "Chemical manufacturing except pharmaceutical manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Basic chemical manufacturing", Description = "Basic chemical manufacturing Industry.", Logo = "Basic chemical manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Resin synthetic rubber and artificial synthetic fibres and filaments manufacturing", Description = "Resin synthetic rubber and artificial synthetic fibres and filaments manufacturing Industry.", Logo = "Resin synthetic rubber and artificial synthetic fibres and filaments manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Pharmaceutical manufacturing", Description = "Pharmaceutical manufacturing Industry.", Logo = "Pharmaceutical manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Paint, coating and adhesive manufacturing", Description = "Paint, coating and adhesive manufacturing Industry.", Logo = "Paint, coating and adhesive manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Pesticide, fertilizer and other agricultural chemical manufacturing; soap, cleaning compound and toilet preparation manufacturing; and other chemical product manufacturing", Description = "Pesticide, fertilizer and other agricultural chemical manufacturing; soap, cleaning compound and toilet preparation manufacturing; and other chemical product manufacturing Industry.", Logo = "Pesticide, fertilizer and other agricultural chemical manufacturing; soap, cleaning compound and toilet preparation manufacturing; and other chemical product manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Plastics and rubber products manufacturing", Description = "Plastics and rubber products manufacturing Industry.", Logo = "Plastics and rubber products manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Plastic product manufacturing except Motor vehicle plastic parts manufacturing", Description = "Plastic product manufacturing except Motor vehicle plastic parts manufacturing Industry.", Logo = "Plastic product manufacturing except Motor vehicle plastic parts manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Motor vehicle plastic parts manufacturing", Description = "Motor vehicle plastic parts manufacturing Industry.", Logo = "Motor vehicle plastic parts manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Rubber product manufacturing", Description = "Rubber product manufacturing Industry.", Logo = "Rubber product manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Non-metallic mineral product manufacturing", Description = "Non-metallic mineral product manufacturing Industry.", Logo = "Non-metallic mineral product manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Primary metal manufacturing", Description = "Primary metal manufacturing Industry.", Logo = "Primary metal manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Iron and steel mills and ferro-alloy manufacturing; steel product manufacturing from purchased steel; non-ferrous metal (except aluminium) production and process", Description = "Iron and steel mills and ferro-alloy manufacturing; steel product manufacturing from purchased steel; non-ferrous metal (except aluminium) production and process Industry.", Logo = "Iron and steel mills and ferro-alloy manufacturing; steel product manufacturing from purchased steel; non-ferrous metal (except aluminium) production and process".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Alumina and aluminum production and processing", Description = "Alumina and aluminum production and processing Industry.", Logo = "Alumina and aluminum production and processing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Ferrous metal foundries", Description = "Ferrous metal foundries Industry.", Logo = "Ferrous metal foundries".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Non-ferrous metal foundries", Description = "Non-ferrous metal foundries Industry.", Logo = "Non-ferrous metal foundries".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Fabricated metal product manufacturing", Description = "Fabricated metal product manufacturing Industry.", Logo = "Fabricated metal product manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Forging and stamping; cutlery and hand tool manufacturing; hardware manufacturing; spring and wire product manufacturing; other fabricated metal product manufacturing Industry.", Description = "Forging and stamping; cutlery and hand tool manufacturing; hardware manufacturing; spring and wire product manufacturing; other fabricated metal product manufacturing Industry.", Logo = "Forging and stamping; cutlery and hand tool manufacturing; hardware manufacturing; spring and wire product manufacturing; other fabricated metal product manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Architectural and structural metals manufacturing", Description = "Architectural and structural metals manufacturing Industry.", Logo = "Architectural and structural metals manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Boiler, tank and shipping container manufacturing", Description = "Boiler, tank and shipping container manufacturing Industry.", Logo = "Boiler, tank and shipping container manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Machine shops, turned product and screw, nut and bolt manufacturing", Description = "Machine shops, turned product and screw, nut and bolt manufacturing", Logo = "Machine shops, turned product and screw, nut and bolt manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Coating, engraving, heat treatment and allied activities", Description = "Coating, engraving, heat treatment and allied activities Industry.", Logo = "Coating, engraving, heat treatment and allied activities".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Machinery manufacturing", Description = "Machinery manufacturing Industry.", Logo = "Machinery manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Machinery manufacturing except mining and oil and gas field machinery manufacturing; sawmill and woodworking machinery manufacturing; rubber and plastics industry machinery manufacturing; ventilation, heating, air-conditioning, and commercial refrigeration", Description = "Machinery manufacturing except mining and oil and gas field machinery manufacturing; sawmill and woodworking machinery manufacturing; rubber and plastics industry machinery manufacturing; ventilation, heating, air-conditioning, and commercial refrigeration Industry.", Logo = "Machinery manufacturing except mining and oil and gas field machinery manufacturing; sawmill and woodworking machinery manufacturing; rubber and plastics industry machinery manufacturing; ventilation, heating, air-conditioning, and commercial refrigeration".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Mining and oil and gas field machinery manufacturing", Description = "Mining and oil and gas field machinery manufacturing Industry.", Logo = "Mining and oil and gas field machinery manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Sawmill and woodworking machinery manufacturing", Description = "Sawmill and woodworking machinery manufacturing Industry.", Logo = "Sawmill and woodworking machinery manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Rubber and plastics industry machinery manufacturing", Description = "Rubber and plastics industry machinery manufacturing Industry.", Logo = "Rubber and plastics industry machinery manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Ventilation, heating, air-conditioning, and commercial refrigeration equipment manufacturing", Description = "Ventilation, heating, air-conditioning, and commercial refrigeration equipment manufacturing Industry.", Logo = "Ventilation, heating, air-conditioning, and commercial refrigeration equipment manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Metalworking machinery manufacturing", Description = "Metalworking machinery manufacturing Industry.", Logo = "Metalworking machinery manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Computer and electronic product manufacturing", Description = "Computer and electronic product manufacturing Industry.", Logo = "Computer and electronic product manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Computers and peripheral equipment manufacturing", Description = "Computers and peripheral equipment manufacturing Industry.", Logo = "Computers and peripheral equipment manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Communications equipment manufacturing", Description = "Communications equipment manufacturing Industry.", Logo = "Communications equipment manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Telephone apparatus manufacturing", Description = "Telephone apparatus manufacturing Industry.", Logo = "Telephone apparatus manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Radio and television broadcasting and wireless communications equipment", Description = "Radio and television broadcasting and wireless communications equipment Industry.", Logo = "Radio and television broadcasting and wireless communications equipment".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Semiconductor and other electronic components manufacturing", Description = "Semiconductor and other electronic components manufacturing Industry.", Logo = "Semiconductor and other electronic components manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Navigational and guidance instruments manufacturing", Description = "Navigational and guidance instruments manufacturing Industry.", Logo = "Navigational and guidance instruments manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Electrical equipment, appliance and component manufacturing", Description = "Electrical equipment, appliance and component manufacturing Industry.", Logo = "Electrical equipment, appliance and component manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Electrical lighting equipment manufacturing", Description = "Electrical lighting equipment manufacturing Industry.", Logo = "Electrical lighting equipment manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Household appliance manufacturing", Description = "Household appliance manufacturing Industry.", Logo = "Household appliance manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Electric equipment manufacturing", Description = "Electric equipment manufacturing Industry.", Logo = "Electric equipment manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Other electrical equipment and component manufacturing", Description = "Other electrical equipment and component manufacturing Industry.", Logo = "Other electrical equipment and component manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Transportation equipment manufacturing", Description = "Transportation equipment manufacturing Industry.", Logo = "Transportation equipment manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Motor vehicle manufacturing", Description = "Motor vehicle manufacturing Industry.", Logo = "Motor vehicle manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Motor vehicle body and trailer manufacturing", Description = "Motor vehicle body and trailer manufacturing Industry.", Logo = "Motor vehicle body and trailer manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Motor vehicle parts manufacturing", Description = "Motor vehicle parts manufacturing Industry.", Logo = "Motor vehicle parts manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Aerospace product and parts manufacturing", Description = "Aerospace product and parts manufacturing Industry.", Logo = "Aerospace product and parts manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Railroad rolling stock manufacturing", Description = "Railroad rolling stock manufacturing Industry.", Logo = "Railroad rolling stock manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Ship and boat building", Description = "Ship and boat building Industry.", Logo = "Ship and boat building".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Other transportation equipment manufacturing", Description = "Other transportation equipment manufacturing Industry.", Logo = "Other transportation equipment manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Furniture and related product manufacturing", Description = "Furniture and related product manufacturing Industry.", Logo = "Furniture and related product manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Miscellaneous manufacturing", Description = "Miscellaneous manufacturing Industry.", Logo = "Miscellaneous manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Medical equipment and supplies manufacturing", Description = "Medical equipment and supplies manufacturing Industry.", Logo = "Medical equipment and supplies manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "All surveyed industries except manufacturing", Description = "All surveyed industries except manufacturing Industry.", Logo = "All surveyed industries except manufacturing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Selected service", Description = "Selected service Industry.", Logo = "Selected service".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Wholesale Trade", Description = "Wholesale Trade Industry.", Logo = "Wholesale Trade".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Retail Trade", Description = "Retail Trade Industry.", Logo = "Retail Trade".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Transportation and warehousing", Description = "Transportation and warehousing Industry.", Logo = "Transportation and warehousing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Air transportation", Description = "Air transportation Industry.", Logo = "Air transportation".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Rail transportation", Description = "Rail transportation Industry.", Logo = "Rail transportation".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Water transportation", Description = "Water transportation Industry.", Logo = "Water transportation".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Truck transportation", Description = "Truck transportation Industry.", Logo = "Truck transportation".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Transit and ground passenger transportation", Description = "Transit and ground passenger transportation Industry.", Logo = "Transit and ground passenger transportation".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Pipeline transportation", Description = "Pipeline transportation Industry.", Logo = "Pipeline transportation".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Scenic and sightseeing transportation", Description = "Scenic and sightseeing transportation Industry.", Logo = "Scenic and sightseeing transportation".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Support activities for transportation", Description = "Support activities for transportation Industry.", Logo = "Support activities for transportation".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Postal service and couriers and messengers", Description = "Postal service and couriers and messengers Industry.", Logo = "Postal service and couriers and messengers".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Warehousing and storage", Description = "Warehousing and storage Industry.", Logo = "Warehousing and storage".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Information and cultural industries", Description = "Information and cultural industries Industry.", Logo = "Information and cultural industries".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Newspaper, periodical, book and directory publishers", Description = "Newspaper, periodical, book and directory publishers Industry.", Logo = "Newspaper, periodical, book and directory publishers".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Software publishers", Description = "Software publishers Industry.", Logo = "Software publishers".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Motion picture and video industries", Description = "Motion picture and video industries Industry.", Logo = "Motion picture and video industries".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Wired telecommunications carriers", Description = "Wired telecommunications carriers Industry.", Logo = "Wired telecommunications carriers".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Wireless telecommunications carriers (except satellite)", Description = "Wireless telecommunications carriers (except satellite) Industry.", Logo = "Wireless telecommunications carriers (except satellite)".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Satellite telecommunications", Description = "Satellite telecommunications Industry.", Logo = "Satellite telecommunications".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Software publishers; internet publishing and broadcasting, and web search portals; computer systems design and related services; and data processing, hosting, and related services", Description = "Software publishers; internet publishing and broadcasting, and web search portals; computer systems design and related services; and data processing, hosting, and related services Industry.", Logo = "Software publishers; internet publishing and broadcasting, and web search portals; computer systems design and related services; and data processing, hosting, and related services".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Data processing, hosting and related services", Description = "Data processing, hosting and related services Industry.", Logo = "Data processing, hosting and related services".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Internet publishing and broadcasting, and web search portals", Description = "Internet publishing and broadcasting, and web search portals Industry.", Logo = "Internet publishing and broadcasting, and web search portals".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Finance and insurance", Description = "Finance and insurance Industry.", Logo = "Finance and insurance".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Credit intermediation and related activities and monetary authorities - Central Bank", Description = "Credit intermediation and related activities and monetary authorities - Central Bank Industry.", Logo = "Credit intermediation and related activities and monetary authorities - Central Bank".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Securities, commodity contracts intermediation and brokerage", Description = "Securities, commodity contracts intermediation and brokerage Industry.", Logo = "Securities, commodity contracts intermediation and brokerage".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Insurance carriers and related activities and funds and other financial vehicles", Description = "Insurance carriers and related activities and funds and other financial vehicles Industry.", Logo = "Insurance carriers and related activities and funds and other financial vehicles".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Real estate and rental and leasing", Description = "Real estate and rental and leasing Industry.", Logo = "Real estate and rental and leasing".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Professional, scientific, and technical services", Description = "Professional, scientific, and technical services Industry.", Logo = "Professional scientific and technical services".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Professional, scientific, and technical services except scientific research and development services", Description = "Professional, scientific, and technical services except scientific research and development services Industry.", Logo = "Professional scientific and technical services except scientific research and development services".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Architectural, engineering and related services", Description = "Architectural, engineering and related services Industry.", Logo = "Architectural engineering and related services".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Architectural services; landscape architectural services; engineering services; drafting services; building inspection services; geophysical surveying and mapping services; surveying and mapping (except geophysical) services; industrial design services; and environmental consulting services", Description = "Architectural services; landscape architectural services; engineering services; drafting services; building inspection services; geophysical surveying and mapping services; surveying and mapping (except geophysical) services; industrial design services; and environmental consulting services Industry.", Logo = "Architectural services; landscape architectural services; engineering services; drafting services; building inspection services; geophysical surveying and mapping services; surveying and mapping (except geophysical) services; industrial design services; and environmental consulting services".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Testing laboratories", Description = "Testing laboratories Industry.", Logo = "Testing laboratories".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Computer systems design and related services", Description = "Computer systems design and related services Industry.", Logo = "Computer systems design and related services".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Management, scientific and technical consulting services", Description = "Management, scientific and technical consulting services Industry.", Logo = "Management, scientific and technical consulting services".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Scientific research and development services", Description = "Scientific research and development services Industry.", Logo = "Scientific research and development services".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Advertising, public relations and related services", Description = "Advertising, public relations and related services Industry.", Logo = "Advertising, public relations and related services".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Management of companies and enterprises", Description = "Management of companies and enterprises Industry.", Logo = "Management of companies and enterprises".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Administrative and support, waste management and remediation services", Description = "Administrative and support, waste management and remediation services Industry.", Logo = "Administrative and support, waste management and remediation services".Trim().Replace(" ", "") + ".png" });
                industriesItem.Add(new Industry { Name = "Agriculture, forestry, fishing and hunting; mining, quarrying, and oil and gas extraction; utilities; construction; retail trade; finance and insurance; real estate and rental and leasing; management of companies and enterprises; and administrative and support, waste management and remediation services", Description = "Agriculture, forestry, fishing and hunting; mining, quarrying, and oil and gas extraction; utilities; construction; retail trade; finance and insurance; real estate and rental and leasing; management of companies and enterprises; and administrative and support, waste management and remediation services Industry.", Logo = "Agriculture, forestry, fishing and hunting; mining, quarrying, and oil and gas extraction; utilities; construction; retail trade; finance and insurance; real estate and rental and leasing; management of companies and enterprises; and administrative and support, waste management and remediation services".Trim().Replace(" ", "").ToUpper() + ".png" });

                //Defining and Inserting Product Type Data
                ProductType prodTypeWebsite = new ProductType { Name = "Website", Logo = "../../assets/WEBSITE.png", Code = 01, Symbol = "WEB", Description = "Website Application", Enabled = true };
                ProductType prodTypeDesktop = new ProductType { Name = "Desktop", Logo = "../../assets/WEBSITE.png", Code = 02, Symbol = "DES", Description = "Desktop Application", Enabled = true };
                ProductType prodTypeSoapApi = new ProductType { Name = "Soap API", Logo = "../../assets/API_APP.png", Code = 03, Symbol = "SOAP", Description = "SOAP Application Programming Interface", Enabled = true };
                productTypesItem.Add(prodTypeWebsite);
                productTypesItem.Add(prodTypeDesktop);
                productTypesItem.Add(prodTypeSoapApi);
                productTypesItem.Add(new ProductType { Name = "Restful API", Logo = "../../assets/API_APP.png", Code = 04, Symbol = "REST", Description = "Rest Application Programming Interface", Enabled = false });
                productTypesItem.Add(new ProductType { Name = "Operating System Service", Logo = "../../assets/OPERATING_SYSTEM_SERVICE.png", Symbol = "UTIL", Code = 05, Description = "Operating System Service", Enabled = false });
                productTypesItem.Add(new ProductType { Name = "Script", Symbol = "SCRIPT", Logo = "../../assets/SCRIPT_APP.png", Code = 06, Description = "Script", Enabled = true });
                productTypesItem.Add(new ProductType { Name = "Multi Architecture", Logo = "../../assets/MULTI_ARCHITECTURE_APP.png", Symbol = "MUL", Code = 07, Description = "Multi Architecture", Enabled = false });
                productTypesItem.Add(new ProductType { Name = "Mobile", Logo = "../../assets/MOBILE_APP.png", Symbol = "MOB", Code = 08, Description = "Mobile Application", Enabled = false });

                //Uploading Industries Information to database context
                foreach (Industry item in industriesItem)
                {
                    context.Industries.AddRange(item);
                }

                //Uploading App Architype Information to database context
                foreach (ProductType item in productTypesItem)
                {
                    context.ProductTypes.AddRange(item);
                }


                var PasswordPolicyForAdministrators = new PasswordPolicy { Name = "Administrator Password Policy", Description = "Total 6 ( Any character ) keystokes are allowed ", CapitalLetter = 0, SmallLetter = 0, Number = 0, SpecialLetter = 0, Example = "power", Comments = "Basic Password Policy." };
                var PasswordPolicyForUsers = new PasswordPolicy { Name = "Users Policy", Description = "Total 8 ( 1 Capital Letter 5 Small Letters plus 1 number and 1 special character ) keystokes are allowed ", CapitalLetter = 1, SmallLetter = 5, Number = 1, SpecialLetter = 1, Example = "Password!1", Comments = "Users Password Policy." };
                context.PasswordPolicies.AddRange(PasswordPolicyForAdministrators, PasswordPolicyForUsers);

                var Question1 = new Question { Title = "What is your pet called?", Description = "Pet Animal Question for authentication." };
                var Question2 = new Question { Title = "what is the name of your favourite place?", Description = "Favourite Place Question for authentication." };
                var Question3 = new Question { Title = "In which city you were born?", Description = "Born City Question for authentication." };
                var Question4 = new Question { Title = "Which color do you like the most?", Description = "Favourite Color Question for authentication." };
                var Question5 = new Question { Title = "What is the name of your high school?", Description = "High School Question for authentication." };
                var Question6 = new Question { Title = "How many siblings do you have?", Description = "Siblings Question for authentication." };
                var Question7 = new Question { Title = "What is your best friend name?", Description = "Best Friend Question for authentication." };
                var Question8 = new Question { Title = "What is the name of your favourite movie?", Description = "Movie Question for authentication." };
                var Question9 = new Question { Title = "What is the name of the street you live in?", Description = "Street you Live in Question for authentication." };
                var Question10 = new Question { Title = "What is your favourite month of the year?", Description = "Favourite Month of the Year Question for authentication." };
                context.Questions.AddRange(Question1, Question2, Question3, Question4, Question5, Question6, Question7, Question8, Question9, Question10 );

                var languageEnglish = new Language { Name = "English(US)", Description = "English USA", Example = "Hello", ISO2 = "en", ISO3 = "eng" };
                var languageUrdu = new Language { Name = "Urdu", Description = "Urdu Pak", Example = "سلام", ISO2 = "ur", ISO3 = "urd" };
                context.Languages.AddRange(languageEnglish, languageUrdu);

                var themeClassic = new Theme { ThemeCode = "1", Name = "Classic", Description = "Default Theme" };
                var themeWhite = new Theme { ThemeCode = "2", Name = "Simple", Description = "White Theme" };
                var themeDark = new Theme { ThemeCode = "3", Name = "Dark", Description = "Dark Theme" };
                context.Themes.AddRange(themeClassic, themeWhite, themeDark);

                var regionPakistan = new Region { Name = "Pakistan", Logo= "../../assets/PAKISTAN.png", OfficialName = "Islamic Republic of Pakistan".ToUpper(), ISO2 = "pk", ISO3 = "pak", Latitude = 30.3753m, Longitude = 69.3451m };
                var regionUnitedStates = new Region { Name = "United States", Logo = "../../assets/UNITED_STATES.png", OfficialName = "United States of America".ToUpper(), ISO2 = "us", ISO3 = "usa", Latitude = 37.0902m, Longitude = 95.7129m };
                context.Regions.AddRange(regionPakistan, regionUnitedStates);

                var departmentAdministration = new Department { Name = "Administration", Logo = "../../assets/ADMINISTRATION_DEPARTMENT.png", ShortName = "ADMIN", Code = 01, Comments = "Implementation Department." };
                var departmentImplementation = new Department { Name = "Implementation", Logo = "../../assets/IMPLEMENTATION_DEPARTMENT.png", ShortName = "IMP", Code = 02, Comments = "Implementation Department." };
                var departmentDevelopment = new Department { Name = "Development", Logo = "../../assets/DEVELOPMENT_DEPARTMENT.png", ShortName = "DEV", Code = 03, Comments = "Development Department." };
                var departmentQualityAssurance = new Department { Name = "Quality Assurance", Logo = "../../assets/QUALITY_ASSURANCE_DEPARTMENT.png", ShortName = "QA", Code = 04, Comments = "Quality Assurance Department." };
                var departmentBusinessAnalysis = new Department { Name = "Business Analysis", Logo = "../../assets/BUSINESS_ANALYSIS_DEPARTMENT.png", ShortName = "BA", Code = 05, Comments = "Business Analysis Department." };
                context.Departments.AddRange(departmentAdministration, departmentImplementation, departmentDevelopment, departmentQualityAssurance, departmentBusinessAnalysis);

                var rankConsultant = new Rank { Code = 01, Name = "Consultant", Logo = "../../assets/CONSULTANT.png", Description = "Consultant Rank." };
                var rankSeniorConsultant = new Rank { Code = 02, Name = "Senior Consultant", Logo = "../../assets/SENIOR_CONSULTANT.png", Description = "Senior Consultant Rank." };
                var rankManager = new Rank { Code = 03, Name = "Manager", Logo = "../../assets/MANAGER.png", Description = "Manager Rank." };
                var rankSeniorManager = new Rank { Code = 04, Name = "Senior Manager", Logo = "../../assets/SENIOR_MANAGER.png", Description = "Senior Manager Rank." };
                var rankExecutiveSeniorManager = new Rank { Code = 05, Name = "Executive Senior Manager", Logo = "../../assets/EXECUTIVE_SENIOR_MANAGER.png", Description = "Executive Senior Manager Rank." };
                var rankDirector = new Rank { Code = 06, Name = "Director", Logo = "../../assets/DIRECTOR.png", Description = "Director Rank." };
                context.Ranks.AddRange(rankConsultant, rankSeniorConsultant, rankManager, rankSeniorManager, rankExecutiveSeniorManager, rankDirector);

                var userAdmin = new User { FirstName = "Power", MiddleName = "(Admininstrator)", LastName = "User", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = "admin", Email = "saad.ahmed@sidathyder.com.pk", Department = departmentAdministration, Rank = rankManager, PhoneExtension = 342, Mobile = "0312-2050513", ClientPoc = false, Processed = true, Enabled = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = "power", WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForAdministrators, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-02-01"), Language = languageEnglish, Theme = themeClassic, Region = regionPakistan, TermsAgreeed = true };
                
                var userInternal1 = new User { FirstName = "Muhammad", MiddleName = "Noman", LastName = "Khan", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = "noman", Email = "noman.khan@sidathyder.com.pk", Department = departmentImplementation, Rank = rankManager, PhoneExtension = 369, Mobile = "0322-8285907", ClientPoc = false, Processed = true, Enabled = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = "Noman123", WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-02-01"), Language = languageEnglish, Theme = themeClassic, Region = regionPakistan, TermsAgreeed = true };
                var userInternal2 = new User { FirstName = "Syed", MiddleName = "Faisal", LastName = "Mehmood", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = "faisal", Email = "faisal.mehmood@sidathyder.com.pk", Department = departmentBusinessAnalysis, Rank = rankManager, PhoneExtension = 388, Mobile = "0345-2344796", ClientPoc = false, Processed = true, Enabled = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = "Noman123", WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-02-01"), Language = languageEnglish, Theme = themeClassic, Region = regionPakistan, TermsAgreeed = true };
                var userInternal3 = new User { FirstName = "Sameer", MiddleName = "", LastName = "Raj", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = "sameer", Email = "sameer.raj@sidathyder.com.pk", Department = departmentQualityAssurance, Rank = rankSeniorConsultant, PhoneExtension = 388, Mobile = "0333-2778929", ClientPoc = false, Processed = true, Enabled = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = "Noman123", WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-02-01"), Language = languageEnglish, Theme = themeClassic, Region = regionPakistan, TermsAgreeed = true };
                var userInternal4 = new User { FirstName = "Habib", MiddleName = "Ul", LastName = "Rehman", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = "habib", Email = "habib.rehman@sidathyder.com.pk", Department = departmentQualityAssurance, Rank = rankManager, PhoneExtension = 388, Mobile = "0333-3777312", ClientPoc = false, Processed = true, Enabled = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = "Noman123", WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-02-01"), Language = languageEnglish, Theme = themeClassic, Region = regionPakistan, TermsAgreeed = true };
                var userInternal5 = new User { FirstName = "Ali", MiddleName = "", LastName = "Rizwan", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = "ali", Email = "ali.rizwan@sidathyder.com.pk", Department = departmentBusinessAnalysis, Rank = rankManager, PhoneExtension = 388, Mobile = "0333-3777312", ClientPoc = false, Processed = true, Enabled = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = "Noman123", WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-02-01"), Language = languageEnglish, Theme = themeClassic, Region = regionPakistan, TermsAgreeed = true };

                var userInternal6 = new User { FirstName = "Hasnain", MiddleName = "", LastName = "Tayyab", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = "hasnain", Email = "hasnain.tayyab@sidathyder.com.pk", Department = departmentDevelopment, Rank = rankSeniorConsultant, PhoneExtension = 321, Mobile = "0333-2778929", ClientPoc = false, Processed = true, Enabled = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = "Noman123", WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-02-01"), Language = languageEnglish, Theme = themeClassic, Region = regionPakistan, TermsAgreeed = true };
                var userInternal7 = new User { FirstName = "Muteeb", MiddleName = "Ul", LastName = "Rehman", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = "muteeb", Email = "muteeb.rahman@sidathyder.com.pk", Department = departmentDevelopment, Rank = rankSeniorConsultant, PhoneExtension = 321, Mobile = "0333-3777312", ClientPoc = false, Processed = true, Enabled = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = "Noman123", WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-02-01"), Language = languageEnglish, Theme = themeClassic, Region = regionPakistan, TermsAgreeed = true };
                var userInternal8 = new User { FirstName = "Zeeshan", MiddleName = "", LastName = "Khan", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = "zeeshan", Email = "zeeshan.khan@sidathyder.com.pk", Department = departmentDevelopment, Rank = rankSeniorManager, PhoneExtension = 321, Mobile = "0333-3777312", ClientPoc = false, Processed = true, Enabled = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = "Noman123", WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-02-01"), Language = languageEnglish, Theme = themeClassic, Region = regionPakistan, TermsAgreeed = true };
                var userInternal9 = new User { FirstName = "Sumaira", MiddleName = "", LastName = "Naazli", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = "sumaira", Email = "sumaira.naazli@sidathyder.com.pk", Department = departmentDevelopment, Rank = rankSeniorManager, PhoneExtension = 388, Mobile = "0333-2778929", ClientPoc = false, Processed = true, Enabled = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = "Noman123", WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-02-01"), Language = languageEnglish, Theme = themeClassic, Region = regionPakistan, TermsAgreeed = true };
                var userInternal10 = new User { FirstName = "Dawood", MiddleName = "Ul", LastName = "Rehman", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = "dawood", Email = "dawood.rehman@sidathyder.com.pk", Department = departmentDevelopment, Rank = rankSeniorConsultant, PhoneExtension = 388, Mobile = "0333-3777312", ClientPoc = false, Processed = true, Enabled = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = "Noman123", WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-02-01"), Language = languageEnglish, Theme = themeClassic, Region = regionPakistan, TermsAgreeed = true };
                var userInternal11 = new User { FirstName = "Asif", MiddleName = "", LastName = "Habib", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = "asif", Email = "asif.habib@sidathyder.com.pk", Department = departmentDevelopment, Rank = rankExecutiveSeniorManager, PhoneExtension = 388, Mobile = "0333-3777312", ClientPoc = false, Processed = true, Enabled = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = "Noman123", WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-02-01"), Language = languageEnglish, Theme = themeClassic, Region = regionPakistan, TermsAgreeed = true };

                var userBAFLAMCTechnical = new User { FirstName = "Luqman", MiddleName = "", LastName = "Shah", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "luqman@alfalahghp.com", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userBAFLAMCOperational = new User { FirstName = "Ali", MiddleName = "", LastName = "Abbas", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@alfalahghp.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userBAFLAMCProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@alfalahghp.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userBAFLAMCFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@alfalahghp.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                var userHBLAMCTechnical = new User { FirstName = "Muhammad", MiddleName = "-", LastName = "Saeed", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "saeed@hblassetmanagement.com", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userHBLAMCOperational = new User { FirstName = "-", MiddleName = "-", LastName = "Asim", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@hblassetmanagement.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userHBLAMCProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@hblassetmanagement.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userHBLAMCFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@hblassetmanagement.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                var userHBLBANKTechnical = new User { FirstName = "Muhammad", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "saeed@hblassetmanagement.com", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userHBLBANKOperational = new User { FirstName = "Ali", MiddleName = "", LastName = "Abbas", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@alfalahghp.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userHBLBANKProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@alfalahghp.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userHBLBANKFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@alfalahghp.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                var userPMRCDFITechnical = new User { FirstName = "Muhammad", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "zeeshan@pmrc.com.pk", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userPMRCDFIOperational = new User { FirstName = "Ali", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@alfalahghp.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userPMRCDFIProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@alfalahghp.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userPMRCDFIFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@alfalahghp.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                var userBOPBANKTechnical = new User { FirstName = "Muhammad", MiddleName = "", LastName = "Danish", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "zeeshan@bop.com.pk", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userBOPBANKOperational = new User { FirstName = "Ali", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@bop.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userBOPBANKProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@bop.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userBOPBANKFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@bop.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                var userSTATELIFETechnical = new User { FirstName = "Muhammad", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "zeeshan@STATELIFE.com.pk", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userSTATELIFEOperational = new User { FirstName = "Ali", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@STATELIFE.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userSTATELIFEProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@STATELIFE.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userSTATELIFEFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@STATELIFE.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                var userFAYSALAMCTechnical = new User { FirstName = "Muhammad", MiddleName = "", LastName = "Humaiyo", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "zeeshan@FAYSALAMC.com.pk", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userFAYSALAMCOperational = new User { FirstName = "Ali", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@FAYSALAMC.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userFAYSALAMCProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@FAYSALAMC.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userFAYSALAMCFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@FAYSALAMC.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                var userPAKOMANTechnical = new User { FirstName = "Muhammad", MiddleName = "", LastName = "Irtiza", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "zeeshan@PAKOMAN.com.pk", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userPAKOMANOperational = new User { FirstName = "Ali", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@PAKOMAN.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userPAKOMANProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@PAKOMAN.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userPAKOMANFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@PAKOMAN.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                var userJUBILEETechnical = new User { FirstName = "Muhammad", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "zeeshan@PAKOMAN.com.pk", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userJUBILEEOperational = new User { FirstName = "Ali", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@PAKOMAN.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userJUBILEEProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@PAKOMAN.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userJUBILEEFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@PAKOMAN.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                var userEFUTechnical = new User { FirstName = "Muhammad", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "zeeshan@efulife.com", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userEFUOperational = new User { FirstName = "Ali", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@efulife.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userEFUProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@efulife.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userEFUFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@efulife.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                var userSIZATechnical = new User { FirstName = "Muhammad", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "zeeshan@siza.com.pk", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userSIZAOperational = new User { FirstName = "Ali", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@sizaN.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userSIZAProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@siza.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userSIZAFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@siza.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                var userPAKIRANTechnical = new User { FirstName = "Muhammad", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "zeeshan@siza.com.pk", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userPAKIRANOperational = new User { FirstName = "Ali", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@sizaN.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userPAKIRANProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@siza.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userPAKIRANFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@siza.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                var userCYANTechnical = new User { FirstName = "Muhammad", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "zeeshan@siza.com.pk", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userCYANOperational = new User { FirstName = "Ali", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@sizaN.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userCYANProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@siza.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userCYANFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@siza.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                var userABLAMCTechnical = new User { FirstName = "Muhammad", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "zeeshan@siza.com.pk", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userABLAMCOperational = new User { FirstName = "Ali", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@sizaN.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userABLAMCProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@siza.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userABLAMCFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@siza.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                var user786AMCTechnical = new User { FirstName = "Muhammad", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "zeeshan@siza.com.pk", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var user786AMCOperational = new User { FirstName = "Ali", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@sizaN.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var user786AMCProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@siza.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var user786AMCFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@siza.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                var userFAZALTechnical = new User { FirstName = "Muhammad", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "zeeshan@FAZAL.com.pk", PhoneExtension = 142, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userFAZALOperational = new User { FirstName = "Ali", MiddleName = "", LastName = "Zubair", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ali.abbas@FAZAL.com", PhoneExtension = 145, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userFAZALProjectManager = new User { FirstName = "Noman", MiddleName = "", LastName = "Soomro", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "noman.soomro@FAZAL.com", PhoneExtension = 02, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };
                var userFAZALFinancial = new User { FirstName = "Syed", MiddleName = "Ghazanfar", LastName = "Naqvi", Logo = "../../assets/ANONYMOUS_USER.png", LoginName = String.Empty, Email = "ghazanfar.naqvi@FAZAL.com", PhoneExtension = 165, Mobile = "0345-2504482", ClientPoc = true, Processed = false, Enabled = false, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now, LoggedIn = false, LastLoginDate = DateTime.Parse("2020-01-01"), CurrentPassword = String.Empty, WrongAttemptCount = 0, LastPassword1 = String.Empty, LastPassword2 = String.Empty, LastPassword3 = String.Empty, LastPassword4 = String.Empty, PasswordPolicy = PasswordPolicyForUsers, Question1 = Question1, Answer1 = "cat", Question2 = Question2, Answer2 = "paris", Question3 = Question3, Answer3 = "karachi", ChangePasswordDate = DateTime.Parse("2021-01-01"), Language = languageEnglish, Theme = themeClassic, Region = regionUnitedStates, TermsAgreeed = false };

                context.Users.AddRange(userAdmin, userInternal1, userInternal2, userInternal3, userInternal4, userInternal5, userInternal6, userInternal7, userInternal8, userInternal9, userInternal10, userInternal11, userBAFLAMCTechnical, userBAFLAMCOperational, userBAFLAMCProjectManager, userBAFLAMCFinancial, userHBLAMCTechnical, userHBLAMCOperational, userHBLAMCProjectManager, userHBLAMCFinancial, userHBLBANKTechnical, userHBLBANKOperational, userHBLBANKProjectManager, userHBLBANKFinancial, userPMRCDFITechnical, userPMRCDFIOperational, userPMRCDFIProjectManager, userPMRCDFIFinancial, userSTATELIFETechnical, userSTATELIFEOperational, userSTATELIFEProjectManager, userSTATELIFEFinancial, userFAYSALAMCTechnical, userFAYSALAMCOperational, userFAYSALAMCProjectManager, userFAYSALAMCFinancial, userPAKOMANTechnical, userPAKOMANOperational, userPAKOMANProjectManager, userPAKOMANFinancial, userJUBILEETechnical, userJUBILEEOperational, userJUBILEEProjectManager, userJUBILEEFinancial, userEFUTechnical, userEFUOperational, userEFUProjectManager, userEFUFinancial, userSIZATechnical, userSIZAOperational, userSIZAProjectManager, userSIZAFinancial, userCYANTechnical, userCYANOperational, userCYANProjectManager, userCYANFinancial, userABLAMCTechnical, userABLAMCOperational, userABLAMCProjectManager, userABLAMCFinancial, user786AMCTechnical, user786AMCOperational, user786AMCProjectManager, user786AMCFinancial, userFAZALTechnical, userFAZALOperational, userFAZALProjectManager, userFAZALFinancial );

                var ratingBAFLAMC = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratingsBAFLAMC = new List<Rating> { ratingBAFLAMC };
                var ratingHBLAMC = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratingsHBLAMC = new List<Rating> { ratingHBLAMC };
                var ratingHBLBANK = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratingsHBLBANK = new List<Rating> { ratingHBLBANK };
                var ratingPMRCDFI = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratingsPMRCDFI = new List<Rating> { ratingPMRCDFI };
                var ratingBOPBANK = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratingsBOPBANK = new List<Rating> { ratingBOPBANK };
                var ratingSTATELIFE = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratingsSTATELIFE = new List<Rating> { ratingSTATELIFE };
                var ratingFAYSALAMC = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratingsFAYSALAMC = new List<Rating> { ratingFAYSALAMC };
                var ratingPAKOMAN = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratingsPAKOMAN = new List<Rating> { ratingPAKOMAN };
                var ratingJUBILEE = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratingsJUBILEE = new List<Rating> { ratingJUBILEE };
                var ratingEFU = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratingsEFU = new List<Rating> { ratingEFU };
                var ratingSIZA = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratingsSIZA = new List<Rating> { ratingSIZA };
                var ratingPAKIRAN = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratingsPAKIRAN = new List<Rating> { ratingPAKIRAN };
                var ratingCYAN = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratingsCYAN = new List<Rating> { ratingCYAN };
                var ratingABLAMC = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratingsABLAMC = new List<Rating> { ratingABLAMC };
                var rating786AMC = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratings786AMC = new List<Rating> { rating786AMC };
                var ratingFAZAL = new Rating { IsCompany = true, IsProduct = false, Stars = 1 };
                var ratingsFAZAL = new List<Rating> { ratingFAZAL };
                

                // Companies Data Add Start Pak Iran, Cyan, ABL Asset Management, 786 Investments, Fazal Cloth
                Company companyBAFLAMC = new Company { Name = "Alfalah Investments", TagLine = "-", Industry = industriesItem[0], Logo = "../../assets/BAFL_AMC.png", Ntn = "-", Email = "it.support@alfalahghp.com", Phone = "111-090-090", Fax = "-", Website = "www.alfalahghp.com", Ratings = ratingsBAFLAMC, Still = true, TechnicalPoc = userBAFLAMCTechnical, OperationalPoc = userBAFLAMCOperational, ProjectPoc = userBAFLAMCProjectManager, FinancialPoc = userBAFLAMCFinancial, Comments = "BAFL AMC Client Information added." };
                Company companyHBLAMC = new Company { Name = "HBL Asset Management", TagLine = "-", Industry = industriesItem[0], Logo = "../../assets/HBL_AMC.png", Ntn = "-", Email = "saeed@hblassetmanagement.com", Phone = "111-090-090", Fax = "-", Website = "www.hblassetmanagement.com", Ratings = ratingsHBLAMC, Still = true, TechnicalPoc = userHBLAMCTechnical, OperationalPoc = userHBLAMCOperational, ProjectPoc = userHBLAMCProjectManager, FinancialPoc = userHBLAMCFinancial, Comments = "HBL AMC Client Information added." };
                Company companyHBLBANK = new Company { Name = "Habib Bank Limited", TagLine = "-", Industry = industriesItem[1], Logo = "../../assets/HBL_BANK.png", Ntn = "-", Email = "zubair@hbl.com", Phone = "111-090-090", Fax = "-", Website = "www.hbl.com", Ratings = ratingsHBLBANK, Still = true, TechnicalPoc = userHBLBANKTechnical, OperationalPoc = userHBLBANKOperational, ProjectPoc = userHBLBANKProjectManager, FinancialPoc = userHBLBANKFinancial, Comments = "HBL BANK Client Information added." };
                Company companyPMRCDFI = new Company { Name = "Pakistan Mortgage Refinance Company", TagLine = "-", Industry = industriesItem[3], Logo = "../../assets/PMRC_DFI.png", Ntn = "-", Email = "z@pmrc.com", Phone = "111-090-090", Fax = "-", Website = "https://pmrc.com.pk/", Ratings = ratingsPMRCDFI, Still = true, TechnicalPoc = userPMRCDFITechnical, OperationalPoc = userPMRCDFIOperational, ProjectPoc = userPMRCDFIProjectManager, FinancialPoc = userPMRCDFIFinancial, Comments = "PMRC DFI Client Information added." };
                Company companyBOPBANK = new Company { Name = "Bank of Punjab", TagLine = "-", Industry = industriesItem[1], Logo = "../../assets/BOP_BANK.png", Ntn = "-", Email = "zeeshan@bop.com", Phone = "111-090-090", Fax = "-", Website = "https://www.bop.com.pk/BoP", Ratings = ratingsBOPBANK, Still = true, TechnicalPoc = userBOPBANKTechnical, OperationalPoc = userBOPBANKOperational, ProjectPoc = userBOPBANKProjectManager, FinancialPoc = userBOPBANKFinancial, Comments = "BOP Bank Client Information added." };
                Company companySTATELIFE = new Company { Name = "State Life Insurrance", TagLine = "-", Industry = industriesItem[4], Logo = "../../assets/STATELIFE_INSURANCE.png", Ntn = "-", Email = "zeeshan@statelife.com", Phone = "111-090-090", Fax = "-", Website = "https://statelife.com.pk/", Ratings = ratingsSTATELIFE, Still = true, TechnicalPoc = userSTATELIFETechnical, OperationalPoc = userSTATELIFEOperational, ProjectPoc = userSTATELIFEProjectManager, FinancialPoc = userSTATELIFEFinancial, Comments = "State Life Client Information added." };
                Company companyFAYSALAMC = new Company { Name = "Faysal Asset Management Company", TagLine = "-", Industry = industriesItem[0], Logo = "../../assets/FAYSAL_AMC.png", Ntn = "-", Email = "saeed@faysalamc.com", Phone = " 111-329-725", Fax = "-", Website = "https://www.faysalfunds.com/", Ratings = ratingsFAYSALAMC, Still = false, TechnicalPoc = userFAYSALAMCTechnical, OperationalPoc = userFAYSALAMCOperational, ProjectPoc = userFAYSALAMCProjectManager, FinancialPoc = userFAYSALAMCFinancial, Comments = "FAYSAL AMC Client Information added." };
                Company companyPAKOMAN = new Company { Name = "Pak Oman Company", TagLine = "-", Industry = industriesItem[0], Logo = "../../assets/PAKOMAN_INVESTMENT.png", Ntn = "-", Email = "saeed@pakoman.com", Phone = "111-090-090", Fax = "-", Website = "https://www.pakoman.com/", Ratings = ratingsPAKOMAN, Still = false, TechnicalPoc = userPAKOMANTechnical, OperationalPoc = userPAKOMANOperational, ProjectPoc = userPAKOMANProjectManager, FinancialPoc = userPAKOMANFinancial, Comments = "PAK OMAN Client Information added." };
                Company companyJUBILEE = new Company { Name = "Jubilee Life Insurance Company", TagLine = "-", Industry = industriesItem[4], Logo = "../../assets/JUBILEE_INSURANCE.png", Ntn = "-", Email = "saeed@jubileelife.com", Phone = "111-111-554", Fax = "-", Website = "https://www.jubileelife.com/", Ratings = ratingsJUBILEE, Still = false, TechnicalPoc = userJUBILEETechnical, OperationalPoc = userJUBILEEOperational, ProjectPoc = userJUBILEEProjectManager, FinancialPoc = userJUBILEEFinancial, Comments = "Jubilee Insurance Information added." };
                Company companyEFU = new Company { Name = "EFU Life Insurrance", TagLine = "-", Industry = industriesItem[4], Logo = "../../assets/EFU_INSURANCE.png", Ntn = "-", Email = "zeeshan@efulife.com", Phone = "111-090-090", Fax = "-", Website = "www.efulife.com.pk", Ratings = ratingsEFU, Still = true, TechnicalPoc = userEFUTechnical, OperationalPoc = userEFUOperational, ProjectPoc = userEFUProjectManager, FinancialPoc = userEFUFinancial, Comments = "EFU Life Insurrance Client Information added." };
                Company companySIZA = new Company { Name = "SIZA Pharmacauticals", TagLine = "-", Industry = industriesItem[52], Logo = "../../assets/SIZA_PHARMA.png", Ntn = "-", Email = "zeeshan@sizapharma.com", Phone = "111-090-090", Fax = "-", Website = "www.sizapharma.com.pk", Ratings = ratingsSIZA, Still = true, TechnicalPoc = userSIZATechnical, OperationalPoc = userSIZAOperational, ProjectPoc = userSIZAProjectManager, FinancialPoc = userSIZAFinancial, Comments = "SIZA Pharma Client Information added." };
                Company companyPAKIRAN = new Company { Name = "Pak Iran Investments", TagLine = "-", Industry = industriesItem[52], Logo = "../../assets/PAKIRAN.png", Ntn = "-", Email = "zeeshan@PAKIRAN.com", Phone = "111-090-090", Fax = "-", Website = "www.pakiran.com.pk", Ratings = ratingsPAKIRAN, Still = true, TechnicalPoc = userPAKIRANTechnical, OperationalPoc = userPAKIRANOperational, ProjectPoc = userPAKIRANProjectManager, FinancialPoc = userPAKIRANFinancial, Comments = "PAK IRAN Client Information added." };
                Company companyCYAN = new Company { Name = "CYAN Investments", TagLine = "-", Industry = industriesItem[52], Logo = "../../assets/CYAN.png", Ntn = "-", Email = "zeeshan@CYAN.com", Phone = "111-090-090", Fax = "-", Website = "www.CYAN.com.pk", Ratings = ratingsCYAN, Still = true, TechnicalPoc = userCYANTechnical, OperationalPoc = userCYANOperational, ProjectPoc = userCYANProjectManager, FinancialPoc = userCYANFinancial, Comments = "CYAN Client Information added." };
                Company companyABLAMC = new Company { Name = "ABL Asset Management", TagLine = "-", Industry = industriesItem[0], Logo = "../../assets/ABL_AMC.png", Ntn = "-", Email = "zeeshan@ABLAMC.com", Phone = "111-090-090", Fax = "-", Website = "www.ABLAMC.com.pk", Ratings = ratingsABLAMC, Still = true, TechnicalPoc = userABLAMCTechnical, OperationalPoc = userABLAMCOperational, ProjectPoc = userABLAMCProjectManager, FinancialPoc = userABLAMCFinancial, Comments = "ABL AMC Client Information added." };
                Company company786AMC = new Company { Name = "786 Investment Limited", TagLine = "-", Industry = industriesItem[0], Logo = "../../assets/786_AMC.png", Ntn = "-", Email = "zeeshan@786AMC.com", Phone = "111-090-090", Fax = "-", Website = "www.786AMC.com.pk", Ratings = ratings786AMC, Still = true, TechnicalPoc = user786AMCTechnical, OperationalPoc = user786AMCOperational, ProjectPoc = user786AMCProjectManager, FinancialPoc = user786AMCFinancial, Comments = "786 AMC Pharma Client Information added." };
                Company companyFAZAL = new Company { Name = "Fazal Clothing", TagLine = "-", Industry = industriesItem[52], Logo = "../../assets/FAZAL_TEXTILE.png", Ntn = "-", Email = "zeeshan@FAZAL.com", Phone = "(92) 61-4579001-10", Fax = "-", Website = "http://www.fazalcloth.com/", Ratings = ratingsFAZAL, Still = true, TechnicalPoc = userFAZALTechnical, OperationalPoc = userFAZALOperational, ProjectPoc = userFAZALProjectManager, FinancialPoc = userFAZALFinancial, Comments = "FAZAL Client Information added." };
                context.Companies.AddRange(companyBAFLAMC, companyHBLAMC, companyHBLBANK, companyPMRCDFI, companyBOPBANK, companySTATELIFE, companyFAYSALAMC, companyPAKOMAN, companyJUBILEE, companyEFU, companySIZA, companyPAKIRAN, companyCYAN, companyABLAMC, company786AMC, companyFAZAL);
                // Companies Data Add End

                // Operating System Start
                OperatingSystem osWindows = new OperatingSystem { Name = "Microsoft Windows", Logo = "../../assets/WINDOWS.png", Version = "Windows 10 Pro", Build = "Build: 18363", CompatibilityMode = "64-bit", Description = "Not Available." };
                var osUbuntu = new OperatingSystem { Name = "Ubuntu", Logo = "../../assets/UBUNTU.png", Version = "LTS 16.04", Build = "-", CompatibilityMode = "-", Description = "Not Available." };
                var osLinux = new OperatingSystem { Name = "Linux", Logo = "../../assets/LINUX.png", Version = "-", Build = "Red Hat", CompatibilityMode = "-", Description = "Not Available." };
                var osMac = new OperatingSystem { Name = "Macintosh", Logo = "../../assets/MAC.png", Version = "High Sierre", Build = "10.13.2", CompatibilityMode = "-", Description = "Not Available." };
                context.OperatingSystems.AddRange(osWindows, osUbuntu, osLinux, osMac);
                // Operating System End

                // Corporation Logic Start Here
                Corporation corporationMicrosoft = new Corporation { Name = "Microsoft", Logo = "../../assets/MICROSOFT.png", Description = "Microsoft Corporation" };
                Corporation corporationOracle = new Corporation { Name = "Oracle", Logo = "../../assets/ORACLE.png", Description = "Oracle Corporation" };
                Corporation corporationIBM = new Corporation { Name = "IBM", Logo = "../../assets/IBM.png", Description = "IBM Corporation" };
                Corporation corporationHP = new Corporation { Name = "Hewlett-Packard", Logo = "../../assets/HEWLETT_PACKARD.png", Description = "Hewlett-Packard Corporation" };
                Corporation corporationGoogle = new Corporation { Name = "Google", Logo = "../../assets/GOOGLE.png", Description = "Google Corporation" };
                Corporation corporationFacebook = new Corporation { Name = "Facebook", Logo = "../../assets/FACEBOOK.png", Description = "Facebook Corporation" };
                Corporation corporationAmazon = new Corporation { Name = "Amazon", Logo = "../../assets/AMAZON.png", Description = "Amazon Corporation" };
                Corporation corporationDocker = new Corporation { Name = "Docker Inc.", Logo = "../../assets/DOCKER_INC.png", Description = "Docker Incorporation" };
                context.Corporations.AddRange(corporationMicrosoft, corporationOracle, corporationIBM, corporationHP, corporationGoogle, corporationFacebook, corporationAmazon, corporationDocker);
                // Corporation Logic End Here

                // Database Vendor Logic Start
                DatabaseVendor databaseVendorMicrosoftSqlServer2008 = new DatabaseVendor { Name = "Microsoft SQL Server 2008 R2", Logo = "../../assets/MICROSOFT_SQL_SERVER_2008_R2.png", Corporation = corporationMicrosoft, Edition = "Enterprise Edition", Version = "10.50.1600.1", Build = "9200", Runtime = 64 };
                DatabaseVendor databaseVendorMicrosoftSqlServer2012 = new DatabaseVendor { Name = "Microsoft SQL Server 2012", Logo = "../../assets/MICROSOFT_SQL_SERVER_2012.png", Corporation = corporationMicrosoft, Edition = "Standard Edition", Version = "11.0.2100.60", Build = "9200", Runtime = 64  };
                DatabaseVendor databaseVendorMicrosoftSqlServer2016 = new DatabaseVendor { Name = "Microsoft SQL Server 2016", Logo = "../../assets/MICROSOFT_SQL_SERVER_2016.png", Corporation = corporationMicrosoft, Edition = "Enterprise Edition", Version = "13.0.5103.6", Build = "14393", Runtime = 64 };
                DatabaseVendor databaseVendorMicrosoftSqlServer2017 = new DatabaseVendor { Name = "Microsoft SQL Server 2017", Logo = "../../assets/MICROSOFT_SQL_SERVER_2017.png", Corporation = corporationMicrosoft, Edition = "Developer Edition", Version = "14.0.2027.2", Build = "14393", Runtime = 64 };
                DatabaseVendor databaseVendorMicrosoftSqlServer2019 = new DatabaseVendor { Name = "Microsoft SQL Server 2019", Logo = "../../assets/MICROSOFT_SQL_SERVER_2019.png", Corporation = corporationMicrosoft, Edition = "Developer Edition", Version = "15.0.2000.5", Build = "18363", Runtime = 64 };
                DatabaseVendor databaseVendorOracle8G = new DatabaseVendor { Name = "Oracle 8G", Logo = "../../assets/ORACLE_DATABASE_8G.png", Corporation = corporationOracle, Edition = "Developer Edition", Version = "8 G", Build = "-", Runtime = 64 };
                DatabaseVendor databaseVendorOracle10G = new DatabaseVendor { Name = "Oracle 10G", Logo = "../../assets/ORACLE_DATABASE_10G.png", Corporation = corporationOracle, Edition = "Developer Edition", Version = "10 G", Build = "-", Runtime = 64 };
                DatabaseVendor databaseVendorOracle11G = new DatabaseVendor { Name = "Oracle 11G", Logo = "../../assets/ORACLE_DATABASE_11G.png", Corporation = corporationOracle, Edition = "Developer Edition", Version = "11 G", Build = "-", Runtime = 64 };
                DatabaseVendor databaseVendorOracle12C = new DatabaseVendor { Name = "Oracle 12C", Logo = "../../assets/ORACLE_DATABASE_12C.png", Corporation = corporationOracle, Edition = "Developer Edition", Version = "12 C", Build = "-", Runtime = 64 };
                DatabaseVendor databaseVendorOracle18C = new DatabaseVendor { Name = "Oracle 18C", Logo = "../../assets/ORACLE_DATABASE_18C.png", Corporation = corporationOracle, Edition = "Developer Edition", Version = "18 C", Build = "-", Runtime = 64 };
                DatabaseVendor databaseVendorOracle19C = new DatabaseVendor { Name = "Oracle 19C", Logo = "../../assets/ORACLE_DATABASE_19C.png", Corporation = corporationOracle, Edition = "Developer Edition", Version = "19 C", Build = "-", Runtime = 64 };
                DatabaseVendor databaseVendorMySql = new DatabaseVendor { Name = "MySql", Logo = "../../assets/MYSQL_DATABASE.png", Corporation = corporationOracle, Edition = "Developer Edition", Version = "-", Build = "-", Runtime = 64 };
                context.DatabaseVendors.AddRange(
                    databaseVendorMicrosoftSqlServer2008,
                    databaseVendorMicrosoftSqlServer2012,
                    databaseVendorMicrosoftSqlServer2016,
                    databaseVendorMicrosoftSqlServer2017,
                    databaseVendorMicrosoftSqlServer2019,
                    databaseVendorOracle8G,
                    databaseVendorOracle10G,
                    databaseVendorOracle11G,
                    databaseVendorOracle12C,
                    databaseVendorOracle18C,
                    databaseVendorOracle19C,
                    databaseVendorMySql
                );
                // Database Vendor Logic End

                // Operating System Support Start
                //Ipams Security Shell
                OperatingSystemSupport osSupportWinforIpamsSecurityShell = new OperatingSystemSupport { OperatingSystem = osWindows };
                        List<OperatingSystemSupport> osSupportListWinforIpamsSecurityShell = new List<OperatingSystemSupport> { osSupportWinforIpamsSecurityShell };
                    //3G
                        OperatingSystemSupport osSupportWinfor3G = new OperatingSystemSupport { OperatingSystem = osWindows };
                        List<OperatingSystemSupport> osSupportListWinfor3G = new List<OperatingSystemSupport> { osSupportWinfor3G };
                    //4G                
                        OperatingSystemSupport osSupportWinfor4G = new OperatingSystemSupport { OperatingSystem = osWindows };
                        List<OperatingSystemSupport> osSupportListWinfor4G = new List<OperatingSystemSupport> { osSupportWinfor4G };
                    //Capella Security Shell Services               
                        OperatingSystemSupport osSupportWinforCapellaSecurityShellServices = new OperatingSystemSupport { OperatingSystem = osWindows };
                        OperatingSystemSupport osSupportUbuntuforCapellaSecurityShellServices = new OperatingSystemSupport { OperatingSystem = osUbuntu };
                        OperatingSystemSupport osSupportLinuxforCapellaSecurityShellServices = new OperatingSystemSupport { OperatingSystem = osLinux };
                        OperatingSystemSupport osSupportMacforCapellaSecurityShellServices = new OperatingSystemSupport { OperatingSystem = osMac };
                        List<OperatingSystemSupport> osSupportListWinforCapellaSecurityShellServices = new List<OperatingSystemSupport> { osSupportWinforCapellaSecurityShellServices, osSupportUbuntuforCapellaSecurityShellServices, osSupportLinuxforCapellaSecurityShellServices, osSupportMacforCapellaSecurityShellServices };
                    //Capella Customer Services               
                        OperatingSystemSupport osSupportWinforCapellaCustomerServices = new OperatingSystemSupport { OperatingSystem = osWindows };
                        OperatingSystemSupport osSupportUbuntuforCapellaCustomerServices = new OperatingSystemSupport { OperatingSystem = osUbuntu };
                        OperatingSystemSupport osSupportLinuxforCapellaCustomerServices = new OperatingSystemSupport { OperatingSystem = osLinux };
                        OperatingSystemSupport osSupportMacforCapellaCustomerServices = new OperatingSystemSupport { OperatingSystem = osMac };
                        List<OperatingSystemSupport> osSupportListWinforCapellaCustomerServices = new List<OperatingSystemSupport> { osSupportWinforCapellaCustomerServices, osSupportUbuntuforCapellaCustomerServices, osSupportLinuxforCapellaCustomerServices, osSupportMacforCapellaCustomerServices };
                    //Capella Services               
                        OperatingSystemSupport osSupportWinforCapellaServices = new OperatingSystemSupport { OperatingSystem = osWindows };
                        OperatingSystemSupport osSupportUbuntuforCapellaServices = new OperatingSystemSupport { OperatingSystem = osUbuntu };
                        OperatingSystemSupport osSupportLinuxforCapellaServices = new OperatingSystemSupport { OperatingSystem = osLinux };
                        OperatingSystemSupport osSupportMacforCapellaServices = new OperatingSystemSupport { OperatingSystem = osMac };
                        List<OperatingSystemSupport> osSupportListWinforCapellaServices = new List<OperatingSystemSupport> { osSupportWinforCapellaServices, osSupportUbuntuforCapellaServices, osSupportLinuxforCapellaServices, osSupportMacforCapellaServices };
                    //Capella Setup Services               
                        OperatingSystemSupport osSupportWinforCapellaSetupServices = new OperatingSystemSupport { OperatingSystem = osWindows };
                        OperatingSystemSupport osSupportUbuntuforCapellaSetupServices = new OperatingSystemSupport { OperatingSystem = osUbuntu };
                        OperatingSystemSupport osSupportLinuxforCapellaSetupServices = new OperatingSystemSupport { OperatingSystem = osLinux };
                        OperatingSystemSupport osSupportMacforCapellaSetupServices = new OperatingSystemSupport { OperatingSystem = osMac };
                        List<OperatingSystemSupport> osSupportListWinforCapellaSetupServices = new List<OperatingSystemSupport> { osSupportWinforCapellaSetupServices, osSupportUbuntuforCapellaSetupServices, osSupportLinuxforCapellaSetupServices, osSupportMacforCapellaSetupServices };
                    //Capella Mobile Transaction Services               
                        OperatingSystemSupport osSupportWinforCapellaMobileTransactionServices = new OperatingSystemSupport { OperatingSystem = osWindows };
                        OperatingSystemSupport osSupportUbuntuforCapellaMobileTransactionServices = new OperatingSystemSupport { OperatingSystem = osUbuntu };
                        OperatingSystemSupport osSupportLinuxforCapellaMobileTransactionServices = new OperatingSystemSupport { OperatingSystem = osLinux };
                        OperatingSystemSupport osSupportMacforCapellaMobileTransactionServices = new OperatingSystemSupport { OperatingSystem = osMac };
                        List<OperatingSystemSupport> osSupportListWinforCapellaMobileTransactionServices = new List<OperatingSystemSupport> { osSupportWinforCapellaMobileTransactionServices, osSupportUbuntuforCapellaMobileTransactionServices, osSupportLinuxforCapellaMobileTransactionServices, osSupportMacforCapellaMobileTransactionServices };
                    //Capella Main Uha               
                        OperatingSystemSupport osSupportWinforCapellaUHAMain = new OperatingSystemSupport { OperatingSystem = osWindows };
                        List<OperatingSystemSupport> osSupportListWinforCapellaUHAMain = new List<OperatingSystemSupport> { osSupportWinforCapellaUHAMain };
                    //Capella Reporting               
                        OperatingSystemSupport osSupportWinforCapellaReporting = new OperatingSystemSupport { OperatingSystem = osWindows };
                        List<OperatingSystemSupport> osSupportListWinforCapellaReporting = new List<OperatingSystemSupport> { osSupportWinforCapellaReporting };
                    //Capella Setup              
                        OperatingSystemSupport osSupportWinforCapellaSetup = new OperatingSystemSupport { OperatingSystem = osWindows };
                        List<OperatingSystemSupport> osSupportListWinforCapellaSetup = new List<OperatingSystemSupport> { osSupportWinforCapellaSetup };
                    //Capella Security Shell          
                        OperatingSystemSupport osSupportWinforCapellaSecuritySehll = new OperatingSystemSupport { OperatingSystem = osWindows };
                        List<OperatingSystemSupport> osSupportListWinforCapellaSecurityShell = new List<OperatingSystemSupport> { osSupportWinforCapellaSecuritySehll };
                    // iSherp         
                        OperatingSystemSupport osSupportWinforiSherp = new OperatingSystemSupport { OperatingSystem = osWindows };
                        List<OperatingSystemSupport> osSupportListWinforiSherp = new List<OperatingSystemSupport> { osSupportWinforiSherp };
                    // Online Portal         
                        OperatingSystemSupport osSupportWinforCapellaOnlinePortal = new OperatingSystemSupport { OperatingSystem = osWindows };
                        List<OperatingSystemSupport> osSupportListWinforCapellaOnlinePortal = new List<OperatingSystemSupport> { osSupportWinforCapellaOnlinePortal };
                    // E-Statement         
                        OperatingSystemSupport osSupportWinforCapellaEStatementUtility = new OperatingSystemSupport { OperatingSystem = osWindows };
                        List<OperatingSystemSupport> osSupportListWinforCapellaEStatementUtility = new List<OperatingSystemSupport> { osSupportWinforCapellaEStatementUtility };
                    // SMS Utility         
                        OperatingSystemSupport osSupportWinforCapellaSMSUtility = new OperatingSystemSupport { OperatingSystem = osWindows };
                        List<OperatingSystemSupport> osSupportListWinforCapellaSMSUtility = new List<OperatingSystemSupport> { osSupportWinforCapellaSMSUtility };
                    // Supply Chain         
                        OperatingSystemSupport osSupportWinforSupplyChain = new OperatingSystemSupport { OperatingSystem = osWindows };
                        List<OperatingSystemSupport> osSupportListWinforSupplyChain = new List<OperatingSystemSupport> { osSupportWinforSupplyChain };
                    //Capella Mobile Transaction Services               
                        OperatingSystemSupport osSupportWinforUHA_CRMIntegrationService = new OperatingSystemSupport { OperatingSystem = osWindows };
                        OperatingSystemSupport osSupportUbuntuforUHA_CRMIntegrationService = new OperatingSystemSupport { OperatingSystem = osUbuntu };
                        OperatingSystemSupport osSupportLinuxforUHA_CRMIntegrationService = new OperatingSystemSupport { OperatingSystem = osLinux };
                        OperatingSystemSupport osSupportMacforUHA_CRMIntegrationService = new OperatingSystemSupport { OperatingSystem = osMac };
                        List<OperatingSystemSupport> osSupportListWinforUHA_CRMIntegrationService = new List<OperatingSystemSupport> { osSupportWinforUHA_CRMIntegrationService, osSupportUbuntuforUHA_CRMIntegrationService, osSupportLinuxforUHA_CRMIntegrationService, osSupportMacforUHA_CRMIntegrationService };

                // Operating System Support End

                var parentProductPams = new ParentProduct { Code = 3, Name = "IPAMS", Logo = "../../assets/IPAMS.png", TagLine = "Financial Application", Description = "Investment Portfolio Accounting and Management System", UserManualLink = "https://www.google.com/", TeamName = "-", CreatedOn = DateTime.Now, MainPoc = userAdmin, Comments = "Ipams Parent Product" };
                var parentProductUha = new ParentProduct { Code = 4, Name = "Capella", Logo = "../../assets/MUTUAL_FUNDS.png", TagLine = "Mutual Funds Application", Description = "Capella Unit Holder Accounting Management System", UserManualLink = "https://www.google.com/", TeamName = "SHMA", CreatedOn = DateTime.Now, MainPoc = userAdmin, Comments = "Capella Parent Product" };
                var parentProductIsherf = new ParentProduct { Code = 5, Name = "ISHERP", TagLine = "iSHERF Application", Logo = "../../assets/SALES_AND_DISTRIBUTION.png", Description = "iSHERF", UserManualLink = "https://www.google.com/", TeamName = "iSHERF", CreatedOn = DateTime.Now, MainPoc = userAdmin, Comments = "iSHERF Parent Product" };
                var parentProductHrms = new ParentProduct { Code = 6, Name = "HRMS", Logo = "../../assets/HCM.png", TagLine = "Human Resource Management System Application", Description = "HRMS", UserManualLink = "https://www.google.com/", TeamName = "HRMS Team", CreatedOn = DateTime.Now, MainPoc = userAdmin, Comments = "HRMS Parent Product" };
                var parentProductSalesAndDistribution = new ParentProduct { Code = 7, Name = "Sidat Hyder ERP", Logo = "../../assets/SALES_AND_DISTRIBUTION.png", TagLine = "Sidat Hyder ERP Systems and Application", Description = "Sidat Hyder ERP Systems and Application", UserManualLink = "https://www.google.com/", TeamName = "SHERP Team", CreatedOn = DateTime.Now, MainPoc = userAdmin, Comments = "SHERP Parent Product" };
                var parentProductRma = new ParentProduct { Code = 8, Name = "Release Management", Logo = "../../assets/release.png", TagLine = "Release management Application", Description = "RMA", UserManualLink = "https://www.google.com/", TeamName = "Implementation Team", CreatedOn = DateTime.Now, MainPoc = userAdmin, Comments = "RMA Parent Product" };
                context.ParentProducts.AddRange(parentProductPams, parentProductUha, parentProductIsherf, parentProductHrms, parentProductSalesAndDistribution, parentProductRma);

                var ratingIpamsSecurityShell1 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingIpamsSecurityShell2 = new Rating { IsCompany = false, IsProduct = true, Stars = 3, User = userAdmin };
                var ratingIpamsSecurityShell3 = new Rating { IsCompany = false, IsProduct = true, Stars = 5, User = userAdmin };
                var ratingPams3g = new Rating { IsCompany = false, IsProduct = true, Stars = 1, User = userAdmin };
                var ratingPams4g1 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingPams4g2 = new Rating { IsCompany = false, IsProduct = true, Stars = 3, User = userAdmin };
                var ratingSecurityShellService1 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingSecurityShellService2 = new Rating { IsCompany = false, IsProduct = true, Stars = 3, User = userAdmin };
                var ratingSecurityShellService3 = new Rating { IsCompany = false, IsProduct = true, Stars = 5, User = userAdmin };
                var ratingCapellaCustomerService1 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingCapellaCustomerService2 = new Rating { IsCompany = false, IsProduct = true, Stars = 3, User = userAdmin };
                var ratingCapellaCustomerService3 = new Rating { IsCompany = false, IsProduct = true, Stars = 5, User = userAdmin };
                var ratingCapellaService1 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingCapellaService2 = new Rating { IsCompany = false, IsProduct = true, Stars = 3, User = userAdmin };
                var ratingCapellaService3 = new Rating { IsCompany = false, IsProduct = true, Stars = 5, User = userAdmin };
                var ratingCapellaSetupService1 = new Rating { IsCompany = false, IsProduct = true, Stars = 4, User = userAdmin };
                var ratingCapellaSetupService2 = new Rating { IsCompany = false, IsProduct = true, Stars = 1, User = userAdmin };
                var ratingCapellaSetupService3 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingMobileTransactionService1 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingMobileTransactionService2 = new Rating { IsCompany = false, IsProduct = true, Stars = 3, User = userAdmin };
                var ratingMobileTransactionService3 = new Rating { IsCompany = false, IsProduct = true, Stars = 5, User = userAdmin };
                var ratingCapellaMain1 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingCapellaMain2 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingCapellaReporting1 = new Rating { IsCompany = false, IsProduct = true, Stars = 3, User = userAdmin };
                var ratingCapellaReporting2 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingCapellaSetup1 = new Rating { IsCompany = false, IsProduct = true, Stars = 4, User = userAdmin };
                var ratingCapellaSetup2 = new Rating { IsCompany = false, IsProduct = true, Stars = 4, User = userAdmin };
                var ratingSecurityShell1 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingSecurityShell2 = new Rating { IsCompany = false, IsProduct = true, Stars = 3, User = userAdmin };
                var ratingSecurityShell3 = new Rating { IsCompany = false, IsProduct = true, Stars = 5, User = userAdmin };
                var ratingISherp1 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingISherp2 = new Rating { IsCompany = false, IsProduct = true, Stars = 3, User = userAdmin };
                var ratingISherp3 = new Rating { IsCompany = false, IsProduct = true, Stars = 5, User = userAdmin };
                var ratingOnlinePortal1 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingOnlinePortal2 = new Rating { IsCompany = false, IsProduct = true, Stars = 3, User = userAdmin };
                var ratingOnlinePortal3 = new Rating { IsCompany = false, IsProduct = true, Stars = 5, User = userAdmin };
                var ratingEStatement1 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingEStatement2 = new Rating { IsCompany = false, IsProduct = true, Stars = 3, User = userAdmin };
                var ratingEStatement3 = new Rating { IsCompany = false, IsProduct = true, Stars = 5, User = userAdmin };
                var ratingSMSUtility1 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingSMSUtility2 = new Rating { IsCompany = false, IsProduct = true, Stars = 3, User = userAdmin };
                var ratingSMSUtility3 = new Rating { IsCompany = false, IsProduct = true, Stars = 5, User = userAdmin };
                var ratingSupplyChain1 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingSupplyChain2 = new Rating { IsCompany = false, IsProduct = true, Stars = 3, User = userAdmin };
                var ratingSupplyChain3 = new Rating { IsCompany = false, IsProduct = true, Stars = 5, User = userAdmin };
                var ratingUHA_CRMIntegrationService1 = new Rating { IsCompany = false, IsProduct = true, Stars = 2, User = userAdmin };
                var ratingUHA_CRMIntegrationService2 = new Rating { IsCompany = false, IsProduct = true, Stars = 3, User = userAdmin };
                var ratingUHA_CRMIntegrationService3 = new Rating { IsCompany = false, IsProduct = true, Stars = 5, User = userAdmin };

                // Rating List Logic Start
                var ratingsIpamsSecurityShell = new List<Rating> { ratingIpamsSecurityShell1, ratingIpamsSecurityShell2, ratingIpamsSecurityShell3 };
                var ratingsPams3g = new List<Rating> { ratingPams3g };
                var ratingsPams4g = new List<Rating> { ratingPams4g1, ratingPams4g2 };
                var ratingsSecurityShellServices = new List<Rating> { ratingSecurityShellService1, ratingSecurityShellService2, ratingSecurityShellService3 };
                var ratingsCapellaCustomerService = new List<Rating> { ratingCapellaCustomerService1, ratingCapellaCustomerService2, ratingCapellaCustomerService3 };
                var ratingsCapellaService = new List<Rating> { ratingCapellaService1, ratingCapellaService2, ratingCapellaService3 };
                var ratingsCapellaSetupService = new List<Rating> { ratingCapellaSetupService1, ratingCapellaSetupService2, ratingCapellaSetupService3 };
                var ratingsMobileTransactionService = new List<Rating> { ratingMobileTransactionService1, ratingMobileTransactionService2, ratingMobileTransactionService3 };
                var ratingsCapellaMain = new List<Rating> { ratingCapellaMain1, ratingCapellaMain2 };
                var ratingsCapellaReporting = new List<Rating> { ratingCapellaReporting1, ratingCapellaReporting2 };
                var ratingsCapellaSetup = new List<Rating> { ratingCapellaSetup1, ratingCapellaSetup2 };
                var ratingsSecurityShell = new List<Rating> { ratingSecurityShell1, ratingSecurityShell2, ratingSecurityShell3 };
                var ratingsISherp = new List<Rating> { ratingISherp1, ratingISherp2, ratingISherp3 };
                var ratingsOnlinePortal = new List<Rating> { ratingOnlinePortal1, ratingOnlinePortal2, ratingOnlinePortal3 };
                var ratingsEStatement = new List<Rating> { ratingEStatement1, ratingEStatement2, ratingEStatement3 };
                var ratingsSMSUtility = new List<Rating> { ratingSMSUtility1, ratingSMSUtility2, ratingSMSUtility3 };
                var ratingsSupplyChain = new List<Rating> { ratingSupplyChain1, ratingSupplyChain2, ratingSupplyChain3 };
                var ratingsUHA_CRMIntegrationService = new List<Rating> { ratingUHA_CRMIntegrationService1, ratingUHA_CRMIntegrationService2, ratingUHA_CRMIntegrationService3 };
                // Rating List Logic End

                // Supplier Logic Start Here
                var supplierSidat = new Supplier { Name = "Sidat Hyder Morshed Associates", ShortName = "SHMA", City = "Karachi", State = "Sindh", Email = "shmakhi@sidathyder.com.pk", Website = "http://www.sidathyder.com.pk/", Logo = "../../assets/SIDAT_HYDER.png", Phone = "(92-21) 3569 3521-30", Fax = "(92-21) 3568 5625", Products = new List<Product> { } };
                context.Suppliers.Add(supplierSidat);
                // Supplier Logic End Here

                var productPrerequisteIpamsSecurityShell1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 4.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 4.0 to Run the IPAMS Security Shell." };
                var productPrerequisteIpamsSecurityShell2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the IPAMS Security Shell." };
                var productPrerequisteIpamsSecurityShell3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the IPAMS Security Shell." };

                var productPrerequisteIpams3g1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 2.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 2.0 to Run the Ipams 3G Web Application." };
                var productPrerequisteIpams4g1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 4.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 4.0 to Run the Ipams 4G Web Application." };
                var productPrerequisteIpams4g2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the Ipams 4G Web Application." };
                var productPrerequisteIpams4g3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the Ipams 4G Web Application." };

                var productPrerequisteSecurityShellService1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 4.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 4.0 to Run the Security Shell Services." };
                var productPrerequisteSecurityShellService2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the Security Shell Services." };
                var productPrerequisteSecurityShellService3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the Security Shell Services." };

                var productPrerequisteCapellaService1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 2.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 2.0 to Run the Capella Services." };
                var productPrerequisteCapellaService2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the Capella Services." };
                var productPrerequisteCapellaService3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the Capella Services." };

                var productPrerequisteCapellaSetupService1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 2.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 2.0 to Run the Capella Setup Services." };
                var productPrerequisteCapellaSetupService2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the Capella Setup Services." };
                var productPrerequisteCapellaSetupService3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the Capella Setup Services." };

                var productPrerequisteMobileTransactionService1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 2.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 2.0 to Run the Capella Mobile Transaction Services." };
                var productPrerequisteMobileTransactionService2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the Capella Mobile Transaction Services." };
                var productPrerequisteMobileTransactionService3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the Capella Mobile Transaction Services." };

                var productPrerequisteCapellaCustomerService1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 2.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 2.0 to Run the Capella Main Services Release" };
                var productPrerequisteCapellaCustomerService2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the Capella Main Services Release" };
                var productPrerequisteCapellaCustomerService3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the Capella Main Service Release" };

                var productPrerequisteCapellaMain1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 2.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 2.0 to Run the Capella UHA Main Application." };
                var productPrerequisteCapellaMain2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the Capella UHA Main Application." };
                var productPrerequisteCapellaMain3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the Capella UHA Main Application." };

                var productPrerequisteCapellaReporting1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 2.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "1. Install .Net Framework 2.0 to Run the Capella Reporting Web Application. \n2. Enable 32-Bit Applications in Application Pool to True while deploying on IIS Web Server.\n3. Start ASP.NET State Service in the Services.msc if it was disabled." };
                var productPrerequisteCapellaReporting2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Reports 2008 Runtime Setup", Logo = "../../assets/CRYSTAL_REPORT_2008.png", Description = "Required Crystal Report 2008 Runtime having Revision Number: {4E3046E3-ABF3-49C1-AA16-EBAF6F4F2E05} also known as CRRuntime_12_3_mlb.msi.\n Download Location: \\ROOT\\RESOURCES\\CRYSTAL_REPORTS\\CRYSTAL_REPORT_2008_INSTALLER\\" };
                var productPrerequisteCapellaReporting3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the Capella Reporting Web Application." };

                var productPrerequisteCapellaSetup1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 2.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 2.0 to Run the Capella Setup Application." };
                var productPrerequisteCapellaSetup2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the Capella Setup Application." };
                var productPrerequisteCapellaSetup3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the Capella Setup Application." };

                var productPrerequisteSecurityShell1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 2.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 4.0 to Run the Security Shell Website." };
                var productPrerequisteSecurityShell2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the Security Shell Website." };
                var productPrerequisteSecurityShell3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the Security Shell Website." };

                var productPrerequisteISherp1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 2.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 4.0 to Run the iSherp Release" };
                var productPrerequisteISherp2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the iSherp Release" };
                var productPrerequisteISherp3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the iSherp Release" };

                var productPrerequisteOnlinePortal1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 2.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 4.0 to Run the iSherp Release" };
                var productPrerequisteOnlinePortal2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the iSherp Release" };
                var productPrerequisteOnlinePortal3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the iSherp Release" };

                var productPrerequisteEStaement1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 2.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 4.0 to Run the E-Statement Application." };
                var productPrerequisteEStaement2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the E-Statement Application." };
                var productPrerequisteEStaement3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the E-Statement Application." };

                var productPrerequisteSMSUtlity1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 4.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 4.0 to Run the SMS Utility Application." };
                var productPrerequisteSMSUtlity2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the SMS Utility Application." };
                var productPrerequisteSMSUtlity3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the SMS Utility Application." };

                var productPrerequisteSupplyChain1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 4.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 4.0 to Run the Supply Chain Application." };
                var productPrerequisteSupplyChain2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the Supply Chain Application." };
                var productPrerequisteSupplyChain3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the Supply Chain Application." };

                var productPrerequisteUHA_CRMIntegrationService1 = new ProductPrerequisite { Number = 1, CreatedOn = DateTime.Now, Name = ".NET Framework 4.0", Logo = "../../assets/.NET_FRAMEWORK.png", Description = "Need .Net Framework 4.0 to Run the UHA CRM Integration Service." };
                var productPrerequisteUHA_CRMIntegrationService2 = new ProductPrerequisite { Number = 2, CreatedOn = DateTime.Now, Name = "Crystal Report", Logo = "../../assets/CRYSTAL_REPORT.png", Description = "Need Crystal Report 2013 to Run the UHA CRM Integration Service." };
                var productPrerequisteUHA_CRMIntegrationService3 = new ProductPrerequisite { Number = 3, CreatedOn = DateTime.Now, Name = "Visual C++ Redistribution 2008 64-bit", Logo = "../../assets/MICROSOFT_VISUAL_C_DISTRIBUTION.png", Description = "Need Visual C++ Redistribution 2008 64 bit to Run the UHA CRM Integration Service." };

                // Prerequisite List Logic End
                var prerequisitesIpamsSecurityShell = new List<ProductPrerequisite> { productPrerequisteIpamsSecurityShell1, productPrerequisteIpamsSecurityShell2, productPrerequisteIpamsSecurityShell3 };
                var prerequisitesPams3g = new List<ProductPrerequisite> { productPrerequisteIpams3g1 };
                var prerequisitesPams4g = new List<ProductPrerequisite> { productPrerequisteIpams4g1, productPrerequisteIpams4g2, productPrerequisteIpams4g3 };
                var prerequisitesSecurityShellServices = new List<ProductPrerequisite> { productPrerequisteSecurityShellService1, productPrerequisteSecurityShellService2, productPrerequisteSecurityShellService3 };
                var prerequisitesCapellaCustomerServices = new List<ProductPrerequisite> { productPrerequisteCapellaCustomerService1, productPrerequisteCapellaCustomerService2, productPrerequisteCapellaCustomerService3 };
                var prerequisitesCapellaServices = new List<ProductPrerequisite> { productPrerequisteCapellaService1, productPrerequisteCapellaService2, productPrerequisteCapellaService3 };
                var prerequisitesCapellaSetupServices = new List<ProductPrerequisite> { productPrerequisteCapellaSetupService1, productPrerequisteCapellaSetupService2, productPrerequisteCapellaSetupService3 };
                var prerequisitesMobileTransactionServices = new List<ProductPrerequisite> { productPrerequisteMobileTransactionService1, productPrerequisteMobileTransactionService2, productPrerequisteMobileTransactionService3 };
                var prerequisitesCapellaMain = new List<ProductPrerequisite> { productPrerequisteCapellaMain1, productPrerequisteCapellaMain2, productPrerequisteCapellaMain3 };
                var prerequisitesCapellaReporting = new List<ProductPrerequisite> { productPrerequisteCapellaReporting1, productPrerequisteCapellaReporting2, productPrerequisteCapellaReporting3 };
                var prerequisitesCapellaSetup = new List<ProductPrerequisite> { productPrerequisteCapellaSetup1, productPrerequisteCapellaSetup2, productPrerequisteCapellaSetup3 };
                var prerequisitesSecurityShell = new List<ProductPrerequisite> { productPrerequisteSecurityShell1, productPrerequisteSecurityShell2, productPrerequisteSecurityShell3 };
                var prerequisitesISherp = new List<ProductPrerequisite> { productPrerequisteISherp1, productPrerequisteISherp2, productPrerequisteISherp3 };
                var prerequisitesOnlinePortal = new List<ProductPrerequisite> { productPrerequisteOnlinePortal1, productPrerequisteOnlinePortal2, productPrerequisteOnlinePortal3 };
                var prerequisitesEStatement = new List<ProductPrerequisite> { productPrerequisteEStaement1, productPrerequisteEStaement2, productPrerequisteEStaement3 };
                var prerequisitesSMSUtility = new List<ProductPrerequisite> { productPrerequisteSMSUtlity1, productPrerequisteSMSUtlity2, productPrerequisteSMSUtlity3 };
                var prerequisitesSupplyChain = new List<ProductPrerequisite> { productPrerequisteSupplyChain1, productPrerequisteSupplyChain2, productPrerequisteSupplyChain3 };
                var prerequisitesUHA_CRMIntegrationService = new List<ProductPrerequisite> { productPrerequisteUHA_CRMIntegrationService1, productPrerequisteUHA_CRMIntegrationService2, productPrerequisteUHA_CRMIntegrationService3 };
                // Prerequisite List Logic End

                // Client Browser Logic Start
                ClientBrowser clientBrowserIE = new ClientBrowser { Name = "Internet Explorer", Logo = "../../assets/INTERNET_EXPLORER.png", Version = "11.0.0.4", Description = "Faster. Safer. Internet Explorer 11 makes the web blazing fast on Windows 7. Now with Bing and MSN defaults for an improved web experience. Fast: Fast at loading sites and fluid as you navigate through them., Easy: Seamless with Windows, it just works the way that you want., Safer: Better protection from threats and increased privacy online., Home page: Stay in the know with the latest news, sport and entertainment with MSN as your home page.Search with Bing & Earn rewards: Now get rewarded with gift cards and more for searching with Bing from your MSN home page." };
                ClientBrowser clientBrowserEdge = new ClientBrowser { Name = "Microsoft Edge", Logo = "../../assets/MICROSOFT_EDGE.png", Version = "88.0.705.68", Description = "Microsoft Edge is a cross-platform web browser developed by Microsoft. It was first released for Windows 10 and Xbox One in 2015, then for Android and iOS in 2017, for macOS in 2019, and as a preview for Linux in October 2020. Edge includes integration with Cortana and has extensions hosted on the Microsoft Store." };
                ClientBrowser clientBrowserChrome = new ClientBrowser { Name = "Google Chrome", Logo = "../../assets/GOOGLE_CHROME.png", Version = "80.0.3987.122", Description = "Google Chrome is a cross-platform web browser developed by Google. It was first released in 2008 for Microsoft Windows, and was later ported to Linux, macOS, iOS, and Android where it is the default browser built into the OS." };
                ClientBrowser clientBrowserFirefox = new ClientBrowser { Name = "Mozilla Firefox", Logo = "../../assets/MOZILLA_FIREFOX.png", Version = "85.0.2", Description = "Mozilla Firefox, or simply Firefox, is a free and open-source web browser developed by the Mozilla Foundation and its subsidiary, the Mozilla Corporation. Firefox uses the Gecko layout engine to render web pages, which implements current and anticipated web standards." };
                ClientBrowser clientBrowserOpera = new ClientBrowser { Name = "Opera", Logo = "../../assets/OPERA_BROWSER.png", Version = "74.0.3911.107", Description = "Opera is a multi-platform web browser developed by Opera Software. Opera is a Chromium-based browser. It distinguishes itself from other browsers through its user interface, functionality, and other features." };
                ClientBrowser clientBrowserUC = new ClientBrowser { Name = "UC Browser", Logo = "../../assets/UC_BROWSER.png", Version = "7.0.185.1002", Description = "UC Browser is a web browser developed by mobile internet company UCWeb, a subsidiary of the Alibaba Group. It is one of the most popular mobile browsers in China and Indonesia, and was the 8th most downloaded mobile app of the 2010–2019 decade." };
                ClientBrowser clientBrowserSafari = new ClientBrowser { Name = "Safari", Logo = "../../assets/SAFARI_BROWSER.png", Version = "5.1.7", Description = "Safari is a graphical web browser developed by Apple, based on the WebKit engine. First released on desktop in 2003 with Mac OS X Panther, a mobile version has been bundled with iOS devices since the iPhone's introduction in 2007. Safari is the default browser on Apple devices." };
                ClientBrowser clientBrowserBrave = new ClientBrowser { Name = "Brave", Logo = "../../assets/BRAVE_BROWSER.png", Version = "1.19.90", Description = "Brave is a free and open-source web browser developed by Brave Software, Inc. based on the Chromium web browser. It blocks ads and website trackers, and provides a way for users to send cryptocurrency contributions in the form of Basic Attention Tokens to websites and content creators." };
                context.ClientBrowsers.AddRange(clientBrowserIE, clientBrowserEdge, clientBrowserChrome, clientBrowserFirefox, clientBrowserOpera, clientBrowserUC, clientBrowserSafari, clientBrowserBrave);
                // Client Browser End

                // Client Browser Support Start
                ClientBrowserSupport clientBrowserSupportEdgeIpamsSecurityShell = new ClientBrowserSupport { Browser = clientBrowserEdge };
                ClientBrowserSupport clientBrowserSupportChromeIpamsSecurityShell = new ClientBrowserSupport { Browser = clientBrowserChrome };
                ClientBrowserSupport clientBrowserSupportFirefoxIpamsSecurityShell = new ClientBrowserSupport { Browser = clientBrowserFirefox };

                ClientBrowserSupport clientBrowserSupportIEIpams3G = new ClientBrowserSupport { Browser = clientBrowserIE };
                ClientBrowserSupport clientBrowserSupportEdgeIpams4G = new ClientBrowserSupport { Browser = clientBrowserEdge };
                ClientBrowserSupport clientBrowserSupportChromeIpams4G = new ClientBrowserSupport { Browser = clientBrowserChrome };
                ClientBrowserSupport clientBrowserSupportFirefoxIpams4G = new ClientBrowserSupport { Browser = clientBrowserFirefox };

                ClientBrowserSupport clientBrowserSupportEdgeCapellaSecurityShellServices = new ClientBrowserSupport { Browser = clientBrowserEdge };
                ClientBrowserSupport clientBrowserSupportChromeCapellaSecurityShellServices = new ClientBrowserSupport { Browser = clientBrowserChrome };
                ClientBrowserSupport clientBrowserSupportFirefoxCapellaSecurityShellServices = new ClientBrowserSupport { Browser = clientBrowserFirefox };

                ClientBrowserSupport clientBrowserSupportEdgeCapellaCustomerServices = new ClientBrowserSupport { Browser = clientBrowserEdge };
                ClientBrowserSupport clientBrowserSupportChromeCapellaCustomerServices = new ClientBrowserSupport { Browser = clientBrowserChrome };
                ClientBrowserSupport clientBrowserSupportFirefoxCapellaCustomerServices = new ClientBrowserSupport { Browser = clientBrowserFirefox };

                ClientBrowserSupport clientBrowserSupportEdgeCapellaServices = new ClientBrowserSupport { Browser = clientBrowserEdge };
                ClientBrowserSupport clientBrowserSupportChromeCapellaServices = new ClientBrowserSupport { Browser = clientBrowserChrome };
                ClientBrowserSupport clientBrowserSupportFirefoxCapellaServices = new ClientBrowserSupport { Browser = clientBrowserFirefox };

                ClientBrowserSupport clientBrowserSupportEdgeCapellaSetupServices = new ClientBrowserSupport { Browser = clientBrowserEdge };
                ClientBrowserSupport clientBrowserSupportChromeCapellaSetupServices = new ClientBrowserSupport { Browser = clientBrowserChrome };
                ClientBrowserSupport clientBrowserSupportFirefoxCapellaSetupServices = new ClientBrowserSupport { Browser = clientBrowserFirefox };

                ClientBrowserSupport clientBrowserSupportEdgeCapellaMobileTransactionServices = new ClientBrowserSupport { Browser = clientBrowserEdge };
                ClientBrowserSupport clientBrowserSupportChromeCapellaMobileTransactionServices = new ClientBrowserSupport { Browser = clientBrowserChrome };
                ClientBrowserSupport clientBrowserSupportFirefoxCapellaMobileTransactionServices = new ClientBrowserSupport { Browser = clientBrowserFirefox };

                ClientBrowserSupport clientBrowserSupportEdgeCapellaUHAMain = new ClientBrowserSupport { Browser = clientBrowserEdge };
                ClientBrowserSupport clientBrowserSupportChromeCapellaUHAMain = new ClientBrowserSupport { Browser = clientBrowserChrome };
                ClientBrowserSupport clientBrowserSupportFirefoxCapellaUHAMain = new ClientBrowserSupport { Browser = clientBrowserFirefox };

                ClientBrowserSupport clientBrowserSupportEdgeCapellaReporting = new ClientBrowserSupport { Browser = clientBrowserEdge };
                ClientBrowserSupport clientBrowserSupportChromeCapellaReporting = new ClientBrowserSupport { Browser = clientBrowserChrome };
                ClientBrowserSupport clientBrowserSupportFirefoxCapellaReporting = new ClientBrowserSupport { Browser = clientBrowserFirefox };

                ClientBrowserSupport clientBrowserSupportEdgeCapellaSetup = new ClientBrowserSupport { Browser = clientBrowserEdge };
                ClientBrowserSupport clientBrowserSupportChromeCapellaSetup = new ClientBrowserSupport { Browser = clientBrowserChrome };
                ClientBrowserSupport clientBrowserSupportFirefoxCapellaSetup = new ClientBrowserSupport { Browser = clientBrowserFirefox };

                ClientBrowserSupport clientBrowserSupportEdgeCapellaSecurityShell = new ClientBrowserSupport { Browser = clientBrowserEdge };
                ClientBrowserSupport clientBrowserSupportChromeCapellaSecurityShell = new ClientBrowserSupport { Browser = clientBrowserChrome };
                ClientBrowserSupport clientBrowserSupportFirefoxCapellaSecurityShell = new ClientBrowserSupport { Browser = clientBrowserFirefox };

                ClientBrowserSupport clientBrowserSupportEdgeiSherp = new ClientBrowserSupport { Browser = clientBrowserEdge };
                ClientBrowserSupport clientBrowserSupportChromeiSherp = new ClientBrowserSupport { Browser = clientBrowserChrome };
                ClientBrowserSupport clientBrowserSupportFirefoxiSherp = new ClientBrowserSupport { Browser = clientBrowserFirefox };

                ClientBrowserSupport clientBrowserSupportEdgeOnlinePortal = new ClientBrowserSupport { Browser = clientBrowserEdge };
                ClientBrowserSupport clientBrowserSupportChromeOnlinePortal = new ClientBrowserSupport { Browser = clientBrowserChrome };
                ClientBrowserSupport clientBrowserSupportFirefoxOnlinePortal = new ClientBrowserSupport { Browser = clientBrowserFirefox };

                ClientBrowserSupport clientBrowserSupportEdgeUHA_CRMIntegrationService = new ClientBrowserSupport { Browser = clientBrowserEdge };
                ClientBrowserSupport clientBrowserSupportChromeUHA_CRMIntegrationService = new ClientBrowserSupport { Browser = clientBrowserChrome };
                ClientBrowserSupport clientBrowserSupportFirefoxUHA_CRMIntegrationService = new ClientBrowserSupport { Browser = clientBrowserFirefox };
                // Client Browser Support End

                // Client Browser Support List Start
                List<ClientBrowserSupport> clientBrowserSupportListIpamsSecurityShell = new List<ClientBrowserSupport> { clientBrowserSupportEdgeIpamsSecurityShell, clientBrowserSupportChromeIpamsSecurityShell, clientBrowserSupportFirefoxIpamsSecurityShell };
                List<ClientBrowserSupport> clientBrowserSupportListIpams3G = new List<ClientBrowserSupport> { clientBrowserSupportIEIpams3G };
                List<ClientBrowserSupport> clientBrowserSupportListIpams4G = new List<ClientBrowserSupport> { clientBrowserSupportEdgeIpams4G, clientBrowserSupportChromeIpams4G, clientBrowserSupportFirefoxIpams4G };
                List<ClientBrowserSupport> clientBrowserSupportListCapellaSecurityShellServices = new List<ClientBrowserSupport> { clientBrowserSupportEdgeCapellaSecurityShellServices, clientBrowserSupportChromeCapellaSecurityShellServices, clientBrowserSupportFirefoxCapellaSecurityShellServices };
                List<ClientBrowserSupport> clientBrowserSupportListCapellaCustomerServices = new List<ClientBrowserSupport> { clientBrowserSupportEdgeCapellaCustomerServices, clientBrowserSupportChromeCapellaCustomerServices, clientBrowserSupportFirefoxCapellaCustomerServices };
                List<ClientBrowserSupport> clientBrowserSupportListCapellaServices = new List<ClientBrowserSupport> { clientBrowserSupportEdgeCapellaServices, clientBrowserSupportChromeCapellaServices, clientBrowserSupportFirefoxCapellaServices };
                List<ClientBrowserSupport> clientBrowserSupportListCapellaSetupServices = new List<ClientBrowserSupport> { clientBrowserSupportEdgeCapellaSetupServices, clientBrowserSupportChromeCapellaSetupServices, clientBrowserSupportFirefoxCapellaSetupServices };
                List<ClientBrowserSupport> clientBrowserSupportListCapellaMobileTransactionServices = new List<ClientBrowserSupport> { clientBrowserSupportEdgeCapellaMobileTransactionServices, clientBrowserSupportChromeCapellaMobileTransactionServices, clientBrowserSupportFirefoxCapellaMobileTransactionServices };
                List<ClientBrowserSupport> clientBrowserSupportListCapellaUHAMain = new List<ClientBrowserSupport> { clientBrowserSupportEdgeCapellaUHAMain, clientBrowserSupportChromeCapellaUHAMain, clientBrowserSupportFirefoxCapellaUHAMain };
                List<ClientBrowserSupport> clientBrowserSupportListCapellaReporting = new List<ClientBrowserSupport> { clientBrowserSupportEdgeCapellaReporting, clientBrowserSupportChromeCapellaReporting, clientBrowserSupportFirefoxCapellaReporting };
                List<ClientBrowserSupport> clientBrowserSupportListCapellaSetup = new List<ClientBrowserSupport> { clientBrowserSupportEdgeCapellaSetup, clientBrowserSupportChromeCapellaSetup, clientBrowserSupportFirefoxCapellaSetup };
                List<ClientBrowserSupport> clientBrowserSupportListCapellaSecurityShell = new List<ClientBrowserSupport> { clientBrowserSupportEdgeCapellaSecurityShell, clientBrowserSupportChromeCapellaSecurityShell, clientBrowserSupportFirefoxCapellaSecurityShell };
                List<ClientBrowserSupport> clientBrowserSupportListiSherp = new List<ClientBrowserSupport> { clientBrowserSupportEdgeiSherp, clientBrowserSupportChromeiSherp, clientBrowserSupportFirefoxiSherp };
                List<ClientBrowserSupport> clientBrowserSupportListOnlinePortal = new List<ClientBrowserSupport> { clientBrowserSupportEdgeOnlinePortal, clientBrowserSupportChromeOnlinePortal, clientBrowserSupportFirefoxOnlinePortal };
                //List<ClientBrowserSupport> clientBrowserSupportListEStatement = new List<ClientBrowserSupport> { null };
                //List<ClientBrowserSupport> clientBrowserSupportListSMSUtility = new List<ClientBrowserSupport> { null };
                //List<ClientBrowserSupport> clientBrowserSupportListSupplyChain = new List<ClientBrowserSupport> { null };
                List<ClientBrowserSupport> clientBrowserSupportListUHA_CRMIntegrationService = new List<ClientBrowserSupport> { clientBrowserSupportEdgeUHA_CRMIntegrationService, clientBrowserSupportChromeUHA_CRMIntegrationService, clientBrowserSupportFirefoxUHA_CRMIntegrationService };
                // Client Browser Support List End

                // Technical Vendor Logic Start
                TechnicalVendor technicalvendorCSHARP = new TechnicalVendor { Name = "C#", Corporation = corporationMicrosoft, Description = "Microsoft Backed Programming Language", Logo = "../../assets/C_SHARP_PROGRAMMING_LANGUAGE.png" };
                TechnicalVendor technicalvendorWCF = new TechnicalVendor { Name = "WCF", Corporation = corporationMicrosoft, Description = "Microsoft Windows Communication Foundation", Logo = "../../assets/WINDOWS_COMMUNICATION_FOUNDATION.png" };
                TechnicalVendor technicalvendorDocker = new TechnicalVendor { Name = "Docker", Corporation = corporationMicrosoft, Description = "Docker is a set of platform as a service (PaaS) products that use OS-level virtualization to deliver software in packages called containers.", Logo = "../../assets/DOCKER.png" };
                context.TechnicalVendors.AddRange(technicalvendorCSHARP, technicalvendorWCF);
                // Technical Vendor Logic End

                // Technical Vendor Support Logic Start
                //IPAMS
                TechnicalVendorSupport technicalVendorSupportIPAMS4G1 = new TechnicalVendorSupport { TechnicalVendor = technicalvendorCSHARP };
                TechnicalVendorSupport technicalVendorSupportIPAMS4G2 = new TechnicalVendorSupport { TechnicalVendor = technicalvendorDocker };
                List<TechnicalVendorSupport> technicalVendorSupportListIPAMS4G = new List<TechnicalVendorSupport> { technicalVendorSupportIPAMS4G1, technicalVendorSupportIPAMS4G2 };
                //Capella
                TechnicalVendorSupport technicalVendorSupportCapellaMain1 = new TechnicalVendorSupport { TechnicalVendor = technicalvendorCSHARP };
                TechnicalVendorSupport technicalVendorSupportCapellaMain2 = new TechnicalVendorSupport { TechnicalVendor = technicalvendorWCF };
                List<TechnicalVendorSupport> technicalVendorSupportListCapellaMain = new List<TechnicalVendorSupport> { technicalVendorSupportCapellaMain1, technicalVendorSupportCapellaMain2 };

                // Technical Vendor Support Logic End

                // Product Logic Start Here
                var productIpamsShellService = new Product { Name = "IPAMS Security Shell", Logo = "../../assets/IPAMS_3G.png", Category = "PAMS", Description = "IPAMS Security Shell Framework 4.0 Version", Type = prodTypeWebsite, ParentProduct = parentProductPams, masterReleaseLink = "128.1.22.85:90/SHMA/WEB/IpamsSecurityShell", masterReleaseWorkingDirecotory = "E:/SHMA/WEB/IpamsSecurityShell/", Ratings = ratingsIpamsSecurityShell, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesIpamsSecurityShell, OperatingSystemSupport = osSupportListWinforIpamsSecurityShell, ClientBrowserSupports = clientBrowserSupportListIpamsSecurityShell };
                var productIpams3G = new Product { Name = "IPAMS 3G", Logo = "../../assets/IPAMS_3G.png", Type = prodTypeWebsite, Category = "PAMS", Description = "IPAMS 3rd Generation Framework 2.0 Version", ParentProduct = parentProductPams, masterReleaseLink= "/root/shma/master_release/web/ipams/ipams3g/dlglogin.aspx", masterReleaseWorkingDirecotory= @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\WEB\IPAMS\IPAMS3G\", Ratings = ratingsPams3g, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesPams3g, OperatingSystemSupport = osSupportListWinfor3G, ClientBrowserSupports = clientBrowserSupportListIpams3G };
                var productIpams4G = new Product { Name = "IPAMS 4G", Logo = "../../assets/IPAMS_4G.png", Type = prodTypeWebsite, Category = "PAMS", Description = "IPAMS 4th Generation Framework 4.0 Version", ParentProduct = parentProductPams, masterReleaseLink = "/root/shma/master_release/web/ipams/ipams4g/dlglogin.aspx", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\WEB\IPAMS\IPAMS4G\", Ratings = ratingsPams4g, Supplier = supplierSidat,  Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesPams4g, OperatingSystemSupport = osSupportListWinfor4G, ClientBrowserSupports = clientBrowserSupportListIpams4G, TechnicalVendorSupports = technicalVendorSupportListIPAMS4G };
                
                var productCapellaSecurityShellService = new Product { Name = "Capella Security Shell Service", Logo = "../../assets/SOAP_API_SERVICE.png", Category = "Capella", Description = "Security Shell Services Framework 4.0 Version", Type = prodTypeSoapApi, ParentProduct = parentProductUha, masterReleaseLink = "/root/shma/master_release/soap/capella_security_shell", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\SOAP\CAPELLA_SECURITY_SHELL\", Ratings = ratingsSecurityShellServices, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesSecurityShellServices, OperatingSystemSupport = osSupportListWinforCapellaSecurityShellServices, ClientBrowserSupports = clientBrowserSupportListCapellaSecurityShellServices };
                var productCapellaCustomerService = new Product { Name = "Capella Customer Service", Category = "Capella UHA Main", Logo = "../../assets/SOAP_API_SERVICE.png", Description = "Capella Customer Services Framework 2.0 Version", Type = prodTypeSoapApi, ParentProduct = parentProductUha, masterReleaseLink = "/root/shma/master_release/soap/capella_customer/", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\SOAP\CAPELLA_CUSTOMER\", Ratings = ratingsCapellaCustomerService, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesCapellaCustomerServices, OperatingSystemSupport = osSupportListWinforCapellaCustomerServices, ClientBrowserSupports = clientBrowserSupportListCapellaCustomerServices };
                var productCapellaService = new Product { Name = "Capella Core Service", Category = "Capella UHA Main", Logo = "../../assets/SOAP_API_SERVICE.png", Description = "Capella Services Framework 2.0 Version", Type = prodTypeSoapApi, ParentProduct = parentProductUha, masterReleaseLink = "/root/shma/master_release/soap/capella_core/", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\SOAP\CAPELLA_CORE\", Ratings = ratingsCapellaService, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesCapellaServices, OperatingSystemSupport = osSupportListWinforCapellaServices, ClientBrowserSupports = clientBrowserSupportListCapellaServices };
                var productCapellaSetupService = new Product { Name = "Capella Setup Service", Logo = "../../assets/SOAP_API_SERVICE.png", Category = "Capella", Description = "Capella Setup Services Framework 2.0 Version", Type = prodTypeSoapApi, ParentProduct = parentProductUha, masterReleaseLink = "/root/shma/master_release/soap/capella_setup", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\SOAP\CAPELLA_SETUP", Ratings = ratingsCapellaSetupService, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesCapellaSetupServices, OperatingSystemSupport = osSupportListWinforCapellaSetupServices, ClientBrowserSupports = clientBrowserSupportListCapellaSetupServices };
                var productCapellaMobileTransactionService = new Product { Name = "Mobile Transaction Service", Logo = "../../assets/SOAP_API_SERVICE.png", Category = "Capella", Description = "Mobile Transaction Services Framework 4.0 Version", Type = prodTypeSoapApi, ParentProduct = parentProductUha, masterReleaseLink = "/root/shma/master_release/soap/capella_mobile_transaction", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\SOAP\CAPELLA_MOBILE_TRANSACTION\", Ratings = ratingsMobileTransactionService, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesMobileTransactionServices, OperatingSystemSupport = osSupportListWinforCapellaMobileTransactionServices, ClientBrowserSupports = clientBrowserSupportListCapellaMobileTransactionServices };
                var productCRMIntegrationService = new Product { Name = "Capella UHA CRM Integration Service", Logo = "../../assets/SOAP_API_SERVICE.png", Category = "Capella", Description = "Capella UHA CRM Integration Service Framework 2.0 Version", Type = prodTypeSoapApi, ParentProduct = parentProductUha, masterReleaseLink = "/root/shma/master_release/soap/capella_crm/", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\SOAP\CAPELLA_CRM", Ratings = ratingsUHA_CRMIntegrationService, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesUHA_CRMIntegrationService, OperatingSystemSupport = osSupportListWinforUHA_CRMIntegrationService, ClientBrowserSupports = clientBrowserSupportListUHA_CRMIntegrationService };
                
                var productCapellaUHAMain = new Product { Name = "Capella Main", Logo = "../../assets/CAPELLA_UHA_MAIN.png", Category = "Capella", Description = "Capella Main Application Framework 2.0 Version", Type = prodTypeWebsite, ParentProduct = parentProductUha, masterReleaseLink = "/root/shma/master_release/web/capella/capella_main/login.aspx", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\WEB\CAPELLA\CAPELLA_MAIN", Ratings = ratingsCapellaMain, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesCapellaMain, OperatingSystemSupport = osSupportListWinforCapellaUHAMain, ClientBrowserSupports = clientBrowserSupportListCapellaUHAMain };
                var productCapellaReporting = new Product { Name = "Capella Reporting", Logo = "../../assets/CAPELLA_REPORTING.png", Category = "Capella", Description = "Capella Reporting Application Framework 2.0 Version", Type = prodTypeWebsite, ParentProduct = parentProductUha, masterReleaseLink = "/root/shma/master_release/web/capella/capella_reporting/login.aspx", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\WEB\CAPELLA\CAPELLA_REPORTING", Ratings = ratingsCapellaReporting, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesCapellaReporting, OperatingSystemSupport = osSupportListWinforCapellaReporting, ClientBrowserSupports = clientBrowserSupportListCapellaReporting };
                var productCapellaSetup = new Product { Name = "Capella Setup", Logo = "../../assets/CAPELLA_SETUP.png", Category = "Capella", Description = "Capella Setup Application Framework 2.0 Version", Type = prodTypeWebsite, ParentProduct = parentProductUha, masterReleaseLink = "/root/shma/master_release/web/capella/capella_setup/login.aspx", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\WEB\CAPELLA\CAPELLA_SETUP", Ratings = ratingsCapellaSetup, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesCapellaSetup, OperatingSystemSupport = osSupportListWinforCapellaSetup, ClientBrowserSupports = clientBrowserSupportListCapellaSetup };
                var productSecurityShell = new Product { Name = "Capella Security Shell", Logo = "../../assets/CAPELLA_SECURITY_SHELL.png", Category = "Capella", Description = "Security Shell Application Framework 4.0 Version", Type = prodTypeWebsite, ParentProduct = parentProductUha, masterReleaseLink = "/root/shma/master_release/web/capella/capella_security_shell/users/login.aspx", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\WEB\CAPELLA\CAPELLA_SECURITY_SHELL", Ratings = ratingsSecurityShell, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesSecurityShell, OperatingSystemSupport = osSupportListWinforCapellaSecurityShell, ClientBrowserSupports = clientBrowserSupportListCapellaSecurityShell };
                var productISherp = new Product { Name = "iSherp", Logo = "../../assets/ISHERP.png", Category = "iSHERP", Description = "iSherp Application Framework 4.0 Version", Type = prodTypeWebsite, ParentProduct = parentProductIsherf, masterReleaseLink = "/root/shma/master_release/web/sherp/isherp/login.aspx", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\WEB\ISHERP\ISHERP\", Ratings = ratingsISherp, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesISherp, OperatingSystemSupport = osSupportListWinforiSherp, ClientBrowserSupports = clientBrowserSupportListiSherp };
                var productOnlinePortal = new Product { Name = "Online Portal", Logo = "../../assets/ONLINE_PORTAL.png", Category = "Capella", Description = "Online Portal Application Framework 4.0 Version; Managed Pipeline Classic;", Type = prodTypeWebsite, ParentProduct = parentProductUha, masterReleaseLink = "/root/shma/master_release/web/capella/capella_online_portal/login.aspx", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\WEB\CAPELLA\CAPELLA_ONLINE_PORTAL", Ratings = ratingsOnlinePortal, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesOnlinePortal, OperatingSystemSupport = osSupportListWinforCapellaOnlinePortal, ClientBrowserSupports = clientBrowserSupportListOnlinePortal };
                var productEStatement = new Product { Name = "E-Statement", Logo = "../../assets/ESTATEMENT_UTILITY.png", Category = "Capella", Description = "eStatement Application Framework 4.0 Version", Type = prodTypeDesktop, ParentProduct = parentProductUha, masterReleaseLink = "-", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\DES\E_STATEMENT_UTILITY\", Ratings = ratingsEStatement, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesEStatement, OperatingSystemSupport = osSupportListWinforCapellaEStatementUtility };
                var productSMSUtility = new Product { Name = "SMS Utility", Logo = "../../assets/SMS_UTILITY.png", Category = "Capella", Description = "SMS Utility Application Framework 4.0 Version; Managed Pipeline Classic;", Type = prodTypeDesktop, ParentProduct = parentProductUha, masterReleaseLink = "-", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\DES\SMS_UTILITY\", Ratings = ratingsSMSUtility, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesSMSUtility, OperatingSystemSupport = osSupportListWinforCapellaSMSUtility };
                var productSupplyChain = new Product { Name = "Supply Chain", Logo = "../../assets/SUPPLY_CHAIN.png", Category = "SHERP", Description = "SMS Utility Application Framework 4.0 Version; Managed Pipeline Classic;", Type = prodTypeDesktop, ParentProduct = parentProductSalesAndDistribution, masterReleaseLink = "-", masterReleaseWorkingDirecotory = @"E:\SHMA_Portal\ROOT\SHMA\MASTER_RELEASE\DES\SUPPLY_CHAIN\", Ratings = ratingsSupplyChain, Supplier = supplierSidat, Updated = false, ReleaseNotes = "No Release Notes Published Yet.", Prerequisites = prerequisitesSupplyChain, OperatingSystemSupport = osSupportListWinforSupplyChain };
                
                context.Products.AddRange( 
                    productIpamsShellService,
                    productIpams3G, 
                    productIpams4G, 
                    productCapellaSecurityShellService,
                    productCapellaCustomerService,
                    productCapellaService, 
                    productCapellaSetupService, 
                    productCapellaMobileTransactionService, 
                    productCapellaUHAMain, 
                    productCapellaReporting, 
                    productCapellaSetup, 
                    productSecurityShell, 
                    productISherp, 
                    productOnlinePortal, 
                    productEStatement, 
                    productSMSUtility, 
                    productSupplyChain, 
                    productCRMIntegrationService);
                // Product Logic End Here

                //Environment Type Logic Start Here,
                EnvironmentType environmentTypeQA = new EnvironmentType { Name = "Quality Assurance", ShortName = "QA", Logo = "../../assets/QUALITY_ASSURANCE.png", Description = "Quality Assurance Instance" };
                EnvironmentType environmentTypeUAT = new EnvironmentType { Name = "User Aquisition Testing", ShortName = "UAT", Logo = "../../assets/USER_ACQUISITION_TESTING.png", Description = "User Acquisition Testing Instance" };
                EnvironmentType environmentTypePROD = new EnvironmentType { Name = "Production", ShortName = "PROD", Logo = "../../assets/PRODUCTION.png", Description = "Production Instance" };
                EnvironmentType environmentTypeDR = new EnvironmentType { Name = "Disaster Recovery", ShortName = "DR", Logo = "../../assets/DISASTER_RECOVERY.png", Description = "Disaster Recovery Instance" };
                EnvironmentType environmentTypeINT = new EnvironmentType { Name = "Internal", ShortName = "INT", Logo = "../../assets/INTERNAL.png", Description = "Internal Instance" };
                context.EnvironmentTypes.AddRange(environmentTypeUAT, environmentTypeQA, environmentTypePROD, environmentTypeDR, environmentTypeINT);
                //Environment Type Logic End Here,

                // Health Check Logic Start Here
                HealthCheck healthCheckBAFLAMC = new HealthCheck { Date = DateTime.Now, Description = "Test Health Check For BAFL AMC INT Environment", Directory = @"\ROOT\RESOURCES\HEALTH_CHECKS\CLIENTS\AMC\BAFL\Report.docx", Passed = false, ReferenceLink = @"\ROOT\RESOURCES\HEALTH_CHECKS\CLIENTS\BANK\HBL\Report.pdf" };
                HealthCheck healthCheckHBLBANK = new HealthCheck { Date = DateTime.Now, Description = "Test Health Check For HBL BANK INT Environment", Directory = @"\ROOT\RESOURCES\HEALTH_CHECKS\CLIENTS\BANK\HBL\Report.docx", Passed = false, ReferenceLink = @"\ROOT\RESOURCES\HEALTH_CHECKS\CLIENTS\BANK\HBL\Report.pdf" };
                HealthCheck healthCheckBOPBANK = new HealthCheck { Date = DateTime.Now, Description = "Test Health Check For BOP BANK INT Environment", Directory = @"\ROOT\RESOURCES\HEALTH_CHECKS\CLIENTS\BANK\BOP\Report.docx", Passed = false, ReferenceLink = @"\ROOT\RESOURCES\HEALTH_CHECKS\CLIENTS\BANK\BOP\Report.pdf" };
                // Health Check Logic End Here

                // Server Type Logic Start Here
                ServerType serverApp = new ServerType { Category = "App", Logo = "../../assets/APPLICATION_SERVER.png", Description = "Application servers run applications in lieu of client computers running applications locally. Application servers often run resource-intensive applications that are shared by a large number of users. Doing so removes the need for each client to have sufficient resources to run the applications. It also removes the need to install and maintain software on many machines as opposed to only one." };
                ServerType serverWeb = new ServerType { Category = "Web", Logo = "../../assets/WEB_SERVER.png", Description = "One of the most abundant types of servers in today’s market is a web server. A web server is a special kind of application server that hosts programs and data requested by users across the Internet or an intranet. Web servers respond to requests from browsers running on client computers for web pages, or other web-based services. Common web servers include Apache web servers, Microsoft Internet Information Services (IIS) servers and Nginx servers." };
                ServerType serverDNS = new ServerType { Category = "DNS", Logo = "../../assets/DNS_SERVER.png", Description = "Domain Name System (DNS) servers are application servers that provide name resolution to client computers by converting names easily understood by humans into machine-readable IP addresses. The DNS system is a widely distributed database of names and other DNS servers, each of which can be used to request an otherwise unknown computer name. When a client needs the address of a system, it sends a DNS request with the name of the desired resource to a DNS server. The DNS server responds with the necessary IP address from its table of names." };
                ServerType serverProxy = new ServerType { Category = "Proxy", Logo = "../../assets/PROXY_SERVER.png", Description = "A proxy server acts as an intermediary between a client and a server. Often used to isolate either the clients or servers for security purposes, a proxy server takes the request from the client. Instead of responding to the client, it passes the request on to another server or process. The proxy server receives the response from the second server and then replies to the original client as if it were replying on its own. In this way, neither the client nor the responding server needs to directly connect to each other." };
                ServerType serverDatabase = new ServerType { Category = "Database", Logo = "../../assets/DATABASE_SERVER.png", Description = "The amount of data used by companies, users, and other services is staggering. Much of that data is stored in databases. Databases need to be accessible to multiple clients at any given time and can require extraordinary amounts of disk space. Both of these needs lend themselves well to locating such databases on servers. Database servers run database applications and respond to numerous requests from clients. Common database server applications include Oracle, Microsoft SQL Server, DB2, and Informix." };
                ServerType serverMail = new ServerType { Category = "Mail", Logo = "../../assets/MAIL_SERVER.png", Description = "Mail servers are a very common type of application server. Mail servers receive emails sent to a user and store them until requested by a client on behalf of said user. Having an email server allows for a single machine to be properly configured and attached to the network at all times. It is then ready to send and receive messages rather than requiring every client machine to have its own email subsystem continuously running." };
                ServerType serverFile = new ServerType { Category = "File", Logo = "../../assets/FILE_SERVER.png", Description = "File servers store and distribute files. Multiple clients or users may share files stored on a server. In addition, centrally storing files offers easier backup or fault tolerance solutions than attempting to provide security and integrity for files on every device in an organization. File server hardware can be designed to maximize read and write speeds to improve performance." };
                ServerType serverPrint = new ServerType { Category = "Print", Logo = "../../assets/PRINT_SERVER.png", Description = "Print servers allow for the management and distribution of printing functionality. Rather than attaching a printer to every workstation, a single print server can respond to printing requests from numerous clients. Today, some larger and higher-end printers come with their own built-in print server, which removes the need for an additional computer-based print server. This internal print server also functions by responding to print requests from a client." };
                ServerType serverMonitoring = new ServerType { Category = "Monitoring and Management", Logo = "../../assets/MONITORING_MANAGEMENT_SERVER.png", Description = "Some servers exist to monitor or manage other systems and clients. There are many types of monitoring servers. Several of them listen to the network and receive every client request and server response, but some do not request or respond to data themselves. In this way, the monitoring server can keep track of all the traffic on the network, as well as the requests and replies of clients and servers, without interfering with those operations. A monitoring server will respond to requests from monitoring clients such as those run by network administrators watching the health of the network." };
                ServerType serverHybrid = new ServerType { Category = "Hybrid", Logo = "../../assets/HYBRID_SERVER.png", Description = "Hybrid Server." };
                ServerType serverUpdate = new ServerType { Category = "Update", Logo = "../../assets/UPDATE_SERVER.png", Description = "Update Server." };
                context.ServerTypes.AddRange(serverApp, serverWeb, serverDNS, serverDatabase, serverProxy, serverMail, serverFile, serverPrint, serverMonitoring, serverHybrid, serverUpdate);
                // Server Type Logic End Here

                // Web Server Logic Start Here
                WebServer webServerIIS = new WebServer { Name = "Internet Information Services", Logo = "../../assets/INTERNET_INFORMATION_SERVICES.png", Description = "Microsoft Internet Information Services", Version = "10" };
                WebServer webServerNginX = new WebServer { Name = "NginX", Logo = "../../assets/NGINX.png", Description = "NginX Web Browser", Version = "10" };
                WebServer webServerTomcat = new WebServer { Name = "Tomcat", Logo = "../../assets/TOMCAT.png", Description = "Tomcat Web Browser", Version = "10" };
                WebServer webServerKestral = new WebServer { Name = "Kestral", Logo = "../../assets/KESTRAL.png", Description = "Kestral Web Browser", Version = "10" };
                WebServer webServerWebsphere = new WebServer { Name = "Websphere", Logo = "../../assets/WEBSPHERES.png", Description = "Websphere Web Browser", Version = "10" };
                context.WebBrowsers.AddRange(webServerIIS, webServerNginX, webServerTomcat, webServerKestral, webServerWebsphere);
                // Web Server Logic End Here

                // Server Logic Start Here
                Server serverBAFLAMCUAT = new Server { Name = "BAFL Test Server", ServerType = serverWeb, Ip = "10.200.1.33", Memory = "12", Port = 81, Processor = "i3 Processor", isVirtualized = false, isCloudBased = false, RemoteEnabled = true, Domain = "AGHP", UserId = "uha.text", Password = "test123", Description = "Client Environment UAT Server", Dependency = "Client Based", isHybridServer = true, operatingSystem = osWindows };
                Server serverBAFLAMCPROD = new Server { Name = "Sidat Hyder Server", ServerType = serverHybrid, Ip = "128.1.22.85", Memory = "6", Port = 50300, Processor = "i3 Processor", isVirtualized = false, isCloudBased = false, RemoteEnabled = true, Domain = "SHMA", UserId = "ipams.erp", Password = "Password@1", Description = "Internal Environment UAT Server", Dependency = "Client Based", isHybridServer = true, operatingSystem = osWindows };
                Server serverInternal = new Server { Name = "Sidat Hyder AAK85 Physical Machine", ServerType = serverHybrid, Ip = "128.1.22.85", Memory = "6", Port = 50300, Processor = "i3 Processor", isVirtualized = true, isCloudBased = false, RemoteEnabled = true, Domain = "SHMA", UserId = "ipams.erp", Password = "Password@1", Description = "AAK85 Desktop Internal Environment Server Created To Check Software Patches of Multiple Client Based ERP System. ", Dependency = "Internal Physical Machine.", isHybridServer = true, operatingSystem = osWindows };
                context.Servers.AddRange(serverBAFLAMCUAT, serverBAFLAMCPROD, serverInternal);
                // Server Logic End Here

                // Environemt for SOAP Service
                Environment environmentBAFLAMCSecurityShellServicseINT = new Environment { ApplicationHyperLink = "/root/shma/clients/amc/bafl/int/soap/capella_security_shell/", Domain = "https://aak85.shma.com/", HttpPort = 90, HttpsPort = 443, Title = "Secuirt Shell Services BAFL AMC Internal", Company = companyBAFLAMC, CreatedDate = DateTime.Now, Dependency = "Physical Environemt.", Description = "Security Shell Services BAFL AMC Internal Environment.", DockerDescription = "NA", DockerImage = "https://hub.docker.com/r/assaykhan/capella_security_shell_service", Dockerized = true, EnvironmentType = environmentTypeINT, LastHealthCheck = healthCheckBAFLAMC, Logo = "../../assets/SPECIFIC_ENVIRONMENT.png", Main = true, ModifiedDate = DateTime.Now, Product = productCapellaSecurityShellService, WorkingDirectory = Path.GetFullPath("e:/releasemanagementportal/root/shma/clients/amc/bafl/int/soap/capella_security_shell/"), Remarks = "Test Instance Security Shell Services for BAFL AMC Client", Updated = true, Server = serverInternal, WebServer = webServerIIS };
                Environment environmentBAFLAMCCapellaCustomerServicesINT = new Environment { ApplicationHyperLink = "/root/shma/clients/amc/bafl/int/soap/capella_customer/", Domain = "https://aak85.shma.com/", HttpPort = 90, HttpsPort = 443, Title = "Capella Customer Services BAFL AMC Internal", Company = companyBAFLAMC, CreatedDate = DateTime.Now, Dependency = "Physical Environemt.", Description = "Capella Customer Services BAFL AMC Internal Environment.", DockerDescription = "NA", DockerImage = "NA", Dockerized = false, EnvironmentType = environmentTypeINT, LastHealthCheck = healthCheckBAFLAMC, Logo = "../../assets/SPECIFIC_ENVIRONMENT.png", Main = true, ModifiedDate = DateTime.Now, Product = productCapellaCustomerService, WorkingDirectory = Path.GetFullPath("e:/releasemanagementportal/root/shma/clients/amc/bafl/int/soap/capella_customer"), Remarks = "Test Instance Capella Customer Services for BAFL AMC Client", Updated = true, Server = serverInternal, WebServer = webServerIIS };
                Environment environmentBAFLAMCCapellaServicesINT = new Environment { ApplicationHyperLink = "/root/shma/clients/amc/bafl/int/soap/capella_core/", Domain = "https://aak85.shma.com/", HttpPort = 90, HttpsPort = 443, Title = "Capella Services BAFL AMC Internal", Company = companyBAFLAMC, CreatedDate = DateTime.Now, Dependency = "Physical Environemt.", Description = "Capella Services BAFL AMC UAT Environment.", DockerDescription = "Internal", DockerImage = "NA", Dockerized = false, EnvironmentType = environmentTypeINT, LastHealthCheck = healthCheckBAFLAMC, Logo = "../../assets/SPECIFIC_ENVIRONMENT.png", Main = true, ModifiedDate = DateTime.Now, Product = productCapellaService, WorkingDirectory = Path.GetFullPath("e:/releasemanagementportal/root/shma/clients/amc/bafl/int/soap/capella_core"), Remarks = "Test Instance Capella Services for BAFL AMC Client", Updated = true, Server = serverInternal, WebServer = webServerIIS };
                Environment environmentBAFLAMCCapellaSetupServicesINT = new Environment { ApplicationHyperLink = "/root/shma/clients/amc/bafl/int/soap/capella_setup/", Domain = "https://aak85.shma.com/", HttpPort = 90, HttpsPort = 443, Title = "Capella Setup Services BAFL AMC Internal", Company = companyBAFLAMC, CreatedDate = DateTime.Now, Dependency = "Physical Environemt.", Description = "Capella Setup Services BAFL AMC Internal Environment.", DockerDescription = "NA", DockerImage = "NA", Dockerized = false, EnvironmentType = environmentTypeINT, LastHealthCheck = healthCheckBAFLAMC, Logo = "../../assets/SPECIFIC_ENVIRONMENT.png", Main = true, ModifiedDate = DateTime.Now, Product = productCapellaSetupService, WorkingDirectory = Path.GetFullPath("e:/releasemanagementportal/root/shma/clients/amc/bafl/int/soap/capella_setup"), Remarks = "Test Instance Capella Setup Services for BAFL AMC Client", Updated = true, Server = serverInternal, WebServer = webServerIIS };
                Environment environmentBAFLAMCMobileTransactionServicesINT = new Environment { ApplicationHyperLink = "/root/shma/clients/amc/bafl/int/soap/capella_mobile_transaction/", Domain = "https://aak85.shma.com/", HttpPort = 90, HttpsPort = 443, Title = "Capella Mobile Transaction Services BAFL AMC Internal", Company = companyBAFLAMC, CreatedDate = DateTime.Now, Dependency = "Physical Environemt.", Description = "Mobile Transaction Services BAFL AMC Internal Environment.", DockerDescription = "NA", DockerImage = "NA", Dockerized = false, EnvironmentType = environmentTypeINT, LastHealthCheck = healthCheckBAFLAMC, Logo = "../../assets/SPECIFIC_ENVIRONMENT.png", Main = true, ModifiedDate = DateTime.Now, Product = productCapellaMobileTransactionService, WorkingDirectory = Path.GetFullPath("e:/releasemanagementportal/root/shma/clients/amc/bafl/int/soap/capella_mobile_transaction"), Remarks = "Test Instance Mobile Transaction Services for BAFL AMC Client", Updated = true, Server = serverInternal, WebServer = webServerIIS };
                // Environment for SOAP Services End


                // Database Logic Start Here
                // 3G
                Server serverInternalDbfor3G101_2_2016_Test = new Server { Name = "Sidat Hyder Internal Database Server", ServerType = serverDatabase, Ip = "128.1.101.2", Memory = "6", Port = 1433, Processor = "i3 Processor", isVirtualized = false, isCloudBased = false, RemoteEnabled = true, Domain = "SHMA", UserId = "ipams", Password = "ipams123", Description = "Internal Database Environment UAT Server", Dependency = "Internal VConn Server", isHybridServer = false, operatingSystem = osWindows };
                Database dbIpams3G = new Database { Server = serverInternalDbfor3G101_2_2016_Test, Instance = "SQL2016", Name = "ipams_db", Comments = "VConn Database SQLDB02 Server", DatabaseVendor = databaseVendorMicrosoftSqlServer2016 };
                    List<Database> listDbIpams3G = new List<Database> { dbIpams3G };
                // 4G
                    //Server serverInternalDb101_2_2016_Test = new Server { Name = "Sidat Hyder Internal Database Server", ServerType = serverDatabase, Ip = "128.1.101.2", Memory = "6", Port = 1433, Processor = "i3 Processor", isVirtualized = false, isCloudBased = false, isRemoteBased = true, Domain = "SHMA", UserId = "ipams", Password = "ipams123", Description = "Internal Database Environment UAT Server", Dependency = "Internal VConn Server", isHybridServer = false, operatingSystem = osWindows };
                        Server serverInternalDbfor4G101_2_2016_Test = new Server { Name = "Sidat Hyder Internal Database Server", ServerType = serverDatabase, Ip = "128.1.101.2", Memory = "6", Port = 1433, Processor = "i3 Processor", isVirtualized = false, isCloudBased = false, RemoteEnabled = true, Domain = "SHMA", UserId = "ipams", Password = "ipams123", Description = "Internal Database Environment UAT Server", Dependency = "Internal VConn Server", isHybridServer = false, operatingSystem = osWindows };
                        Database dbIpams4G = new Database { Server = serverInternalDbfor4G101_2_2016_Test, Instance = "SQL2016", Name = "SIZA_LIVE", Comments = "VConn Database SQLDB02 Server", DatabaseVendor = databaseVendorMicrosoftSqlServer2016 };
                        List<Database> listDbIpams4G = new List<Database> { dbIpams4G };
                    // Capella UHA
                        Server serverInternalDb101_1_2012_Test_SS = new Server { Name = "Sidat Hyder Internal Database Server", ServerType = serverDatabase, Ip = "128.1.101.1", Memory = "6", Port = 1433, Processor = "i3 Processor", isVirtualized = false, isCloudBased = false, RemoteEnabled = true, Domain = "SHMA", UserId = "uha", Password = "uha123", Description = "Internal Database Environment UAT Server", Dependency = "Internal VConn Server", isHybridServer = false, operatingSystem = osWindows };
                        Server serverInternalDb101_1_2012_Test_Capella = new Server { Name = "Sidat Hyder Internal Database Server", ServerType = serverDatabase, Ip = "128.1.101.1", Memory = "6", Port = 1433, Processor = "i3 Processor", isVirtualized = false, isCloudBased = false, RemoteEnabled = true, Domain = "SHMA", UserId = "uha", Password = "uha123", Description = "Internal Database Environment UAT Server", Dependency = "Internal VConn Server", isHybridServer = false, operatingSystem = osWindows };
                        Database dbSS_AGHP_LIVE = new Database { Server = serverInternalDb101_1_2012_Test_SS, Instance = "SQL2012", Name = "SS_AGHP_LIVE", Comments = "VConn Database SQLDB01 Server", Main = false, Hash = "66c6aa9bcd19b2c771b66403b0deec79", DatabaseVendor = databaseVendorMicrosoftSqlServer2012 };
                        Database dbCapella_AGHP_NEW = new Database { Server = serverInternalDb101_1_2012_Test_Capella, Instance = "SQL2012", Name = "CAPELLA_AGHP_NEW", Comments = "VConn Database SQLDB01 Server", Main = true, Hash = "66c5aa9bcd19b2c771b66403b0deec79", DatabaseVendor = databaseVendorMicrosoftSqlServer2012 };
                        List<Database> listDbCapella_AGHP_NEW = new List<Database> { dbCapella_AGHP_NEW, dbSS_AGHP_LIVE };
                // Database for API Capella Security Shell
                Server Server_API_dbSS_AGHP_LIVE = new Server { Name = "Sidat Hyder Internal Database Server", ServerType = serverDatabase, Ip = "128.1.101.1", Memory = "6", Port = 1433, Processor = "i3 Processor", isVirtualized = false, isCloudBased = false, RemoteEnabled = true, Domain = "SHMA", UserId = "uha", Password = "uha123", Description = "Internal Database Environment UAT Server", Dependency = "Internal VConn Server", isHybridServer = false, operatingSystem = osWindows };
                Database DBAPI_dbSS_AGHP_LIVE = new Database { Server = Server_API_dbSS_AGHP_LIVE, Environment = environmentBAFLAMCSecurityShellServicseINT, Instance = "SQL2012", Name = "SS_AGHP_LIVE", Comments = "VConn Database SQLDB01 Server", Main = true, Hash = "", DatabaseVendor = databaseVendorMicrosoftSqlServer2012 };
                List<Database> DBsAPI_List_dbSS_AGHP_LIVE = new List<Database> { DBAPI_dbSS_AGHP_LIVE };
                Api apiCapellaSecurityShellServiceAGHPUAT = new Api { Name = "Capella Security Shell Service", Environment = environmentBAFLAMCSecurityShellServicseINT, Databases = DBsAPI_List_dbSS_AGHP_LIVE, Description = "Capella Security Shell Service for BAFL AMC UAT", Comments = "Capella Security Shell Service for BAFL AMC UAT" };
                //
                Server Server_API_dbCapellaCustomerService_AGHP_LIVE = new Server { Name = "Sidat Hyder Internal Database Server", ServerType = serverDatabase, Ip = "128.1.101.1", Memory = "6", Port = 1433, Processor = "i3 Processor", isVirtualized = false, isCloudBased = false, RemoteEnabled = true, Domain = "SHMA", UserId = "uha", Password = "uha123", Description = "Internal Database Environment UAT Server", Dependency = "Internal VConn Server", isHybridServer = false, operatingSystem = osWindows };
                Database DBAPI_dbCapellaCustomerService_AGHP_LIVE = new Database { Server = Server_API_dbCapellaCustomerService_AGHP_LIVE, Environment = environmentBAFLAMCCapellaCustomerServicesINT, Instance = "SQL2012", Name = "CAPELLA_AGHP_NEW", Comments = "VConn Database SQLDB01 Server", Main = true, Hash = "", DatabaseVendor = databaseVendorMicrosoftSqlServer2012 };
                List<Database> DBsAPI_List_dbCapellaCustomerService_AGHP_LIVE = new List<Database> { DBAPI_dbCapellaCustomerService_AGHP_LIVE };
                Api apiCapellaCustomerServiceAGHPUAT = new Api { Name = "Capella Customer Service", Environment = environmentBAFLAMCCapellaCustomerServicesINT, Databases = DBsAPI_List_dbCapellaCustomerService_AGHP_LIVE, Description = "Capella Customer Service for BAFL AMC UAT", Comments = "Capella Customer Service for BAFL AMC UAT" };
                //
                Server Server_API_dbCapellaCoreService_AGHP_LIVE = new Server { Name = "Sidat Hyder Internal Database Server", ServerType = serverDatabase, Ip = "128.1.101.1", Memory = "6", Port = 1433, Processor = "i3 Processor", isVirtualized = false, isCloudBased = false, RemoteEnabled = true, Domain = "SHMA", UserId = "uha", Password = "uha123", Description = "Internal Database Environment UAT Server", Dependency = "Internal VConn Server", isHybridServer = false, operatingSystem = osWindows };
                Database DBAPI_dbCapellaCoreService_AGHP_LIVE = new Database { Server = Server_API_dbCapellaCoreService_AGHP_LIVE, Environment = environmentBAFLAMCCapellaServicesINT, Instance = "SQL2012", Name = "CAPELLA_AGHP_NEW", Comments = "VConn Database SQLDB01 Server", Main = true, Hash = "", DatabaseVendor = databaseVendorMicrosoftSqlServer2012 };
                List<Database> DBsAPI_List_dbCapellaCoreService_AGHP_LIVE = new List<Database> { DBAPI_dbCapellaCoreService_AGHP_LIVE };
                Api apiCapellaServiceAGHPUAT = new Api { Name = "Capella Core Service", Environment = environmentBAFLAMCCapellaServicesINT, Databases = DBsAPI_List_dbCapellaCoreService_AGHP_LIVE, Description = "Capella Core Service for BAFL AMC UAT", Comments = "Capella Core Service for BAFL AMC UAT" };
                //  
                Server Server_API_dbCapellaSetupService_AGHP_LIVE = new Server { Name = "Sidat Hyder Internal Database Server", ServerType = serverDatabase, Ip = "128.1.101.1", Memory = "6", Port = 1433, Processor = "i3 Processor", isVirtualized = false, isCloudBased = false, RemoteEnabled = true, Domain = "SHMA", UserId = "uha", Password = "uha123", Description = "Internal Database Environment UAT Server", Dependency = "Internal VConn Server", isHybridServer = false, operatingSystem = osWindows };
                Database DBAPI_dbCapellaSetupService_AGHP_LIVE = new Database { Server = Server_API_dbCapellaSetupService_AGHP_LIVE, Environment = environmentBAFLAMCCapellaSetupServicesINT, Instance = "SQL2012", Name = "CAPELLA_AGHP_NEW", Comments = "VConn Database SQLDB01 Server", Main = true, Hash = "", DatabaseVendor = databaseVendorMicrosoftSqlServer2012 };
                List<Database> DBsAPI_List_dbCapellaSetupService_AGHP_LIVE = new List<Database> { DBAPI_dbCapellaSetupService_AGHP_LIVE };
                Environment environmentsetupDemo = new Environment { WorkingDirectory = "E:\\Work\\" };
                Api apiCapellaSetupServiceAGHPUAT = new Api { Name = "Capella Setup Service", Environment = environmentsetupDemo, Databases = DBsAPI_List_dbCapellaSetupService_AGHP_LIVE, Description = "Capella Setup Service for BAFL AMC UAT", Comments = "Capella Setup Service for BAFL AMC UAT" };
                        List<Api> apisAGHPCapellaMainUAT = new List<Api> { apiCapellaSecurityShellServiceAGHPUAT, apiCapellaCustomerServiceAGHPUAT, apiCapellaServiceAGHPUAT, apiCapellaSetupServiceAGHPUAT };
                // Database Logic End Her

                //Environment Logic Start Here,
                Environment environmentBAFLAMCIPAMS3GINT = new Environment { ApplicationHyperLink = "/root/shma/clients/amc/bafl/int/web/ipams/ipams3g", Domain = "https://aak85.shma.com/", HttpPort = 90, HttpsPort = 443, Title = "IPAMS 3G BAFL AMC INT", Company = companyBAFLAMC, CreatedDate = DateTime.Now, Dependency = "Physical Environemt.", Description = "IPAMS 3G BAFL AMC INT Environment.", DockerDescription = "NA", DockerImage = "NA", Dockerized = false, EnvironmentType = environmentTypeINT, LastHealthCheck = healthCheckBAFLAMC, Logo = "../../assets/SPECIFIC_ENVIRONMENT.png", Main = true, ModifiedDate = DateTime.Now, Product = productIpams3G, WorkingDirectory = Path.GetFullPath("e:/releasemanagementportal/root/shma/clients/amc/bafl/int/web/ipams/ipams_3g/"), Remarks = "Test Instance IPAMS 3G for BAFL AMC Client", Updated = true, Server = serverInternal, WebServer = webServerIIS, DatabaseDependency = listDbIpams3G };
                Environment environmentHBLBANKIPAMS4GINT = new Environment { ApplicationHyperLink = "/root/shma/clients/amc/hbl/int/web/ipams/ipams4g", Domain = "https://aak85.shma.com/", HttpPort = 90, HttpsPort = 443, Title = "IPAMS 4G HBL BANK INT", Company = companyHBLBANK, CreatedDate = DateTime.Now, Dependency = "Physical Environemt.", Description = "IPAMS 4G BAFL Bank INT Environment.", DockerDescription = "Docker Application Image Link: assaykhan/ipams4g,\nDocker Database Image Link: assaykhan/ipams4g_db:2.0", DockerImage = "https://hub.docker.com/r/assaykhan/ipams4g", Dockerized = true, EnvironmentType = environmentTypeINT, LastHealthCheck = healthCheckHBLBANK, Logo = "../../assets/SPECIFIC_ENVIRONMENT.png", Main = true, ModifiedDate = DateTime.Now, Product = productIpams4G, WorkingDirectory = Path.GetFullPath(@"e:\releasemanagementportal/root/shma/clients/bank/hbl/int/web/ipams/ipams_4g/"), Remarks = "Test Instance IPAMS 4G for HBL BANK Client", Updated = true, Server = serverInternal, WebServer = webServerIIS, DatabaseDependency = listDbIpams4G };
                Environment environmentBAFLAMCCapellaMainINT = new Environment { ApplicationHyperLink = "/root/shma/clients/amc/bafl/int/web/capella/capella_main", Domain = "https://aak85.shma.com/", HttpPort = 90, HttpsPort = 443, Title = "Capella UHA Main BAFL AMC INT", Company = companyBAFLAMC, CreatedDate = DateTime.Now, Dependency = "Physical Environemt.", Description = "Capella Main BAFL AMC INT Environment.", DockerDescription = "NA", DockerImage = "NA", Dockerized = false, EnvironmentType = environmentTypeINT, LastHealthCheck = healthCheckBAFLAMC, Logo = "../../assets/SPECIFIC_ENVIRONMENT.png", Main = true, ModifiedDate = DateTime.Now, Product = productCapellaUHAMain, WorkingDirectory = Path.GetFullPath("e:/releasemanagementportal/root/shma/clients/amc/bafl/int/web/capella/capella_main/"), Remarks = "Test Instance Capella for BAFL AMC Client", Updated = true, Server = serverInternal, WebServer = webServerIIS, DatabaseDependency = listDbCapella_AGHP_NEW, ApiDependency = apisAGHPCapellaMainUAT };
                Environment environmentBAFLAMCCapellaReportingINT = new Environment { ApplicationHyperLink = "/root/shma/clients/amc/bafl/int/web/capella/capella_reporting", Domain = "https://aak85.shma.com/", HttpPort = 90, HttpsPort = 443, Title = "Capella Reporting BAFL AMC INT", Company = companyBAFLAMC, CreatedDate = DateTime.Now, Dependency = "Physical Environemt.", Description = "Capella Reporting BAFL AMC INT Environment.", DockerDescription = "NA", DockerImage = "NA", Dockerized = false, EnvironmentType = environmentTypeINT, LastHealthCheck = healthCheckBAFLAMC, Logo = "../../assets/SPECIFIC_ENVIRONMENT.png", Main = true, ModifiedDate = DateTime.Now, Product = productCapellaReporting, WorkingDirectory = Path.GetFullPath("e:/releasemanagementportal/root/shma/clients/amc/bafl/int/web/capella/capella_reporting/"), Remarks = "Test Instance Capella Reporting for BAFL AMC Client", Updated = true, Server = serverInternal, WebServer = webServerIIS };
                Environment environmentBAFLAMCCapellaSetupINT = new Environment { ApplicationHyperLink = "/root/shma/clients/amc/bafl/int/web/capella/capella_setup", Domain = "https://aak85.shma.com/", HttpPort = 90, HttpsPort = 443, Title = "Capella Setup UHA BAFL AMC INT", Company = companyBAFLAMC, CreatedDate = DateTime.Now, Dependency = "Physical Environemt.", Description = "Capella Setup BAFL AMC INT Environment.", DockerDescription = "NA", DockerImage = "NA", Dockerized = false, EnvironmentType = environmentTypeINT, LastHealthCheck = healthCheckBAFLAMC, Logo = "../../assets/SPECIFIC_ENVIRONMENT.png", Main = true, ModifiedDate = DateTime.Now, Product = productCapellaSetup, WorkingDirectory = Path.GetFullPath("e:/releasemanagementportal/root/shma/clients/amc/bafl/int/web/capella/capella_setup/"), Remarks = "Test Instance Capella Setup for BAFL AMC Client", Updated = true, Server = serverInternal, WebServer = webServerIIS };
                Environment environmentBAFLAMCSecurityShellINT = new Environment { ApplicationHyperLink = "/root/shma/clients/amc/bafl/int/web/capella/capella_security_shell", Domain = "https://aak85.shma.com/", HttpPort = 90, HttpsPort = 443, Title = "Security Shell BAFL AMC INT", Company = companyBAFLAMC, CreatedDate = DateTime.Now, Dependency = "Physical Environemt.", Description = "Security Shell BAFL AMC INT Environment.", DockerDescription = "NA", DockerImage = "NA", Dockerized = false, EnvironmentType = environmentTypeINT, LastHealthCheck = healthCheckBAFLAMC, Logo = "../../assets/SPECIFIC_ENVIRONMENT.png", Main = true, ModifiedDate = DateTime.Now, Product = productSecurityShell, WorkingDirectory = Path.GetFullPath("e:/releasemanagementportal/root/shma/clients/amc/bafl/int/web/capella/capella_security_shell/"), Remarks = "Test Instance Security Shell for BAFL AMC Client", Updated = true, Server = serverInternal, WebServer = webServerIIS };
                Environment environmentBAFLAMCOnlinePortalINT = new Environment { ApplicationHyperLink = "/root/shma/clients/amc/bafl/int/web/capella/capella_online_portal", Domain = "https://aak85.shma.com/", HttpPort = 90, HttpsPort = 443, Title = "Online Portal BAFL AMC INT", Company = companyBAFLAMC, CreatedDate = DateTime.Now, Dependency = "Physical Environemt.", Description = "Security Shell BAFL AMC INT Environment.", DockerDescription = "NA", DockerImage = "NA", Dockerized = false, EnvironmentType = environmentTypeINT, LastHealthCheck = healthCheckBAFLAMC, Logo = "../../assets/SPECIFIC_ENVIRONMENT.png", Main = true, ModifiedDate = DateTime.Now, Product = productOnlinePortal, WorkingDirectory = Path.GetFullPath("e:/releasemanagementportal/root/shma/clients/amc/bafl/int/web/capella/capella_online_portal/"), Remarks = "Test Instance Online Portal for BAFL AMC Client", Updated = true, Server = serverInternal, WebServer = webServerIIS };
                Environment environmentBAFLAMCeStatementINT = new Environment { ApplicationHyperLink = "-", Title = "eStatement BAFL AMC INT", Domain = "https://aak85.shma.com/", HttpPort = 90, HttpsPort = 443, Company = companyBAFLAMC, CreatedDate = DateTime.Now, Dependency = "Physical Environemt.", Description = "eStatement Windows Based Application for generating account statements BAFL AMC INT Environment.", DockerDescription = "NA", DockerImage = "NA", Dockerized = false, EnvironmentType = environmentTypeINT, LastHealthCheck = healthCheckBAFLAMC, Logo = "../../assets/SPECIFIC_ENVIRONMENT.png", Main = true, ModifiedDate = DateTime.Now, Product = productEStatement, WorkingDirectory = Path.GetFullPath("e:/releasemanagementportal/root/shma/clients/amc/bafl/int/des/capella/capella_estatement/"), Remarks = "Test Instance of eStatement for BAFL AMC Client", Updated = true, Server = serverInternal, WebServer = webServerIIS };
                Environment environmentBAFLAMCSMSUtilityINT = new Environment { ApplicationHyperLink = "-", Title = "SMS Utility BAFL AMC INT", Domain = "https://aak85.shma.com/", HttpPort = 90, HttpsPort = 443, Company = companyBAFLAMC, CreatedDate = DateTime.Now, Dependency = "Physical Environemt.", Description = "SMS Utility Windows Based Application to send SMS BAFL AMC INT Environment.", DockerDescription = "NA", DockerImage = "NA", Dockerized = false, EnvironmentType = environmentTypeINT, LastHealthCheck = healthCheckBAFLAMC, Logo = "../../assets/SPECIFIC_ENVIRONMENT.png", Main = true, ModifiedDate = DateTime.Now, Product = productSMSUtility, WorkingDirectory = Path.GetFullPath("e:/releasemanagementportal/root/shma/clients/amc/bafl/int/des/capella/capella_sms_utility/"), Remarks = "Test Instance of SMS Utility for BAFL AMC Client", Updated = true, Server = serverInternal, WebServer = webServerIIS };
                context.Environments.AddRange(environmentBAFLAMCIPAMS3GINT, environmentHBLBANKIPAMS4GINT, environmentBAFLAMCSecurityShellServicseINT, environmentBAFLAMCCapellaServicesINT, environmentBAFLAMCCapellaSetupServicesINT, environmentBAFLAMCMobileTransactionServicesINT, environmentBAFLAMCCapellaMainINT, environmentBAFLAMCCapellaReportingINT, environmentBAFLAMCCapellaSetupINT, environmentBAFLAMCSecurityShellINT, environmentBAFLAMCOnlinePortalINT, environmentBAFLAMCeStatementINT, environmentBAFLAMCSMSUtilityINT);
                //Environment Logic End Here,

                // Quality Assurance Logic Start
                QualityAssurance qaIpams3GINT = new QualityAssurance { Title = "IPAMS 3G QA for Voucher type issue", Description = "Checking Voucher Type Functionality", DocumentationLink = "file:///E:/SHMA_Portal/Resources/Pams-3G-Deployment-Guide-V2.0.pdf", DocumentLocation = Path.GetFullPath("/root/resources/Pams-3G-Deployment-Guide-V2.0.pdf"), isPassed = false, PerformedBy = userInternal3, VerifiedBy = userInternal4, Remarks = "Need to be fixed the bar." };
                QualityAssurance qaIpams4GINT = new QualityAssurance { Title = "IPAMS 4G QA for Voucher type issue", Description = "Checking Voucher Type Functionality", DocumentationLink = "file:///E:/SHMA_Portal/Resources/Pams-3G-Deployment-Guide-V2.0.pdf", DocumentLocation = Path.GetFullPath("/root/resources/Pams-3G-Deployment-Guide-V2.0.pdf"), isPassed = true, PerformedBy = userInternal3, VerifiedBy = userInternal4, Remarks = "Fixed." };
                QualityAssurance qaCapellaMainINT = new QualityAssurance { Title = "Capella Main QA for Risk Category", Description = "Checking Risk Category Functionality", DocumentationLink = "file:///E:/SHMA_Portal/Resources/Pams-3G-Deployment-Guide-V2.0.pdf", DocumentLocation = Path.GetFullPath("/root/resources/Pams-3G-Deployment-Guide-V2.0.pdf"), isPassed = true, PerformedBy = userInternal3, VerifiedBy = userInternal4, Remarks = "Fixed." };
                QualityAssurance qaCapellaReportingINT = new QualityAssurance { Title = "Capella Reporting QA for Account Statement", Description = "Checking Account Statement Date Time Issue Functionality", DocumentationLink = "file:///E:/SHMA_Portal/Resources/Pams-3G-Deployment-Guide-V2.0.pdf", DocumentLocation = Path.GetFullPath("/root/resources/Pams-3G-Deployment-Guide-V2.0.pdf"), isPassed = true, PerformedBy = userInternal3, VerifiedBy = userInternal4, Remarks = "Fixed." };
                QualityAssurance qaCapellaSetupINT = new QualityAssurance { Title = "Capella Setup QA", Description = "Checking Capella Setup Feature Functionality", DocumentationLink = "file:///E:/SHMA_Portal/Resources/Pams-3G-Deployment-Guide-V2.0.pdf", DocumentLocation = Path.GetFullPath("/root/resources/Pams-3G-Deployment-Guide-V2.0.pdf"), isPassed = true, PerformedBy = userInternal3, VerifiedBy = userInternal4, Remarks = "Fixed." };
                QualityAssurance qaCapellaOnlinePortalINT = new QualityAssurance { Title = "Capella Online Portal QA", Description = "Checking Capella Online Portal Email Sending Issue Functionality", DocumentationLink = "file:///E:/SHMA_Portal/Resources/Pams-3G-Deployment-Guide-V2.0.pdf", DocumentLocation = Path.GetFullPath("/root/resources/Pams-3G-Deployment-Guide-V2.0.pdf"), isPassed = true, PerformedBy = userInternal3, VerifiedBy = userInternal4, Remarks = "Fixed." };
                QualityAssurance qaCapellaMobileTransactionINT = new QualityAssurance { Title = "Capella Mobile Transaction QA", Description = "Checking Capella Mobile Transaction Email Sending Issue Functionality", DocumentationLink = "file:///E:/SHMA_Portal/Resources/Pams-3G-Deployment-Guide-V2.0.pdf", DocumentLocation = Path.GetFullPath("/root/resources/Pams-3G-Deployment-Guide-V2.0.pdf"), isPassed = true, PerformedBy = userInternal3, VerifiedBy = userInternal4, Remarks = "Fixed." };
                QualityAssurance qaCapellaEStatementINT = new QualityAssurance { Title = "Capella E-Statement QA", Description = "Checking Capella E-Statement Email Sending Issue Functionality", DocumentationLink = "file:///E:/SHMA_Portal/Resources/Pams-3G-Deployment-Guide-V2.0.pdf", DocumentLocation = Path.GetFullPath("/root/resources/Pams-3G-Deployment-Guide-V2.0.pdf"), isPassed = true, PerformedBy = userInternal3, VerifiedBy = userInternal4, Remarks = "Fixed." };
                QualityAssurance qaCapellaSmsUtilityINT = new QualityAssurance { Title = "Capella SMS Utility QA", Description = "Checking Capella SMS Utility Email Sending Issue Functionality", DocumentationLink = "file:///E:/SHMA_Portal/Resources/Pams-3G-Deployment-Guide-V2.0.pdf", DocumentLocation = Path.GetFullPath("/root/resources/Pams-3G-Deployment-Guide-V2.0.pdf"), isPassed = true, PerformedBy = userInternal3, VerifiedBy = userInternal4, Remarks = "Fixed." };
                context.QualityAssurances.AddRange(qaIpams3GINT, qaIpams4GINT, qaCapellaMainINT, qaCapellaReportingINT, qaCapellaSetupINT, qaCapellaOnlinePortalINT, qaCapellaMobileTransactionINT, qaCapellaEStatementINT, qaCapellaSmsUtilityINT);
                // Quality Assurance Logic End


                // Release Logic Start
                Release releasePams3G = new Release { Title = "Ipams Release On Voucher Types Feature", Company = companyBAFLAMC, CreatedDate = DateTime.Now, DeployedBy = userInternal1, DeployedDate = DateTime.Now, Description = "Adding First Patch on BAFL AMC 3G On Internal Server", DevelopedBy = userInternal9, EnvironmentType = environmentTypeINT, Environment = environmentBAFLAMCIPAMS3GINT, PatchNumber = "ipams3gvouchertype", Product = productIpams3G, QualityAssurance = qaIpams3GINT, Remarks = "Deployed Successfully." };
                Release releasePams4G = new Release { Title = "Ipams Release On Voucher Types Feature", Company = companyHBLBANK, CreatedDate = DateTime.Now, DeployedBy = userInternal1, DeployedDate = DateTime.Now, Description = "Adding First Patch on HBL Bank 4G On Internal Server", DevelopedBy = userInternal9, EnvironmentType = environmentTypeINT, Environment = environmentHBLBANKIPAMS4GINT, PatchNumber = "ipams4gvouchertype", Product = productIpams4G, QualityAssurance = qaIpams4GINT, Remarks = "Deployed Successfully." };
                Release releaseCapellaMain = new Release { Title = "Capella Main Release On Risk Category Feature", Company = companyBAFLAMC, CreatedDate = DateTime.Now, DeployedBy = userInternal1, DeployedDate = DateTime.Now, Description = "Adding First Patch on BAFL AMC Capella Main On Internal Server", DevelopedBy = userInternal9, EnvironmentType = environmentTypeINT, Environment = environmentBAFLAMCCapellaMainINT, PatchNumber = "SHuhas_Patch_CS_26012021_1713", Product = productCapellaUHAMain, QualityAssurance = qaCapellaMainINT, Remarks = "Deployed Successfully." };
                Release releaseCapellaReporting = new Release { Title = "Capella Reporting Release On Account Statement Feature", Company = companyBAFLAMC, CreatedDate = DateTime.Now, DeployedBy = userInternal1, DeployedDate = DateTime.Now, Description = "Adding First Patch on BAFL AMC Capella Reporting On Internal Server", DevelopedBy = userInternal9, EnvironmentType = environmentTypeINT, Environment = environmentBAFLAMCCapellaReportingINT, PatchNumber = "SHuhas_Patch_CR_18-02-2021_1646", Product = productCapellaReporting, QualityAssurance = qaCapellaReportingINT, Remarks = "Deployed Successfully." };
                Release releaseCapellaSetup = new Release { Title = "Capella Setup Release On Account Statement Feature", Company = companyBAFLAMC, CreatedDate = DateTime.Now, DeployedBy = userInternal1, DeployedDate = DateTime.Now, Description = "Adding First Patch on BAFL AMC Capella Setup On Internal Server", DevelopedBy = userInternal9, EnvironmentType = environmentTypeINT, Environment = environmentBAFLAMCCapellaReportingINT, PatchNumber = "SHuhas_Patch_CS_18-02-2021_1646", Product = productCapellaSetup, QualityAssurance = qaCapellaSetupINT, Remarks = "Deployed Successfully." };
                Release releaseCapellaOnlinePortal = new Release { Title = "Capella Online Portal Feature", Company = companyBAFLAMC, CreatedDate = DateTime.Now, DeployedBy = userInternal1, DeployedDate = DateTime.Now, Description = "Adding First Patch on BAFL AMC Capella Online Portal On Internal Server", DevelopedBy = userInternal9, EnvironmentType = environmentTypeINT, Environment = environmentBAFLAMCOnlinePortalINT, PatchNumber = "SHuhas_Patch_UOS_26012021_1713", Product = productOnlinePortal, QualityAssurance = qaCapellaOnlinePortalINT, Remarks = "Deployed Successfully." };
                Release releaseCapellaMobileTransaction = new Release { Title = "Capella Mobile Transaction Feature", Company = companyBAFLAMC, CreatedDate = DateTime.Now, DeployedBy = userInternal1, DeployedDate = DateTime.Now, Description = "Adding First Patch on BAFL AMC Mobile Transaction On Internal Server", DevelopedBy = userInternal9, EnvironmentType = environmentTypeINT, Environment = environmentBAFLAMCMobileTransactionServicesINT, PatchNumber = "SHuhas_Patch_MTRX_26012021_1713", Product = productCapellaMobileTransactionService, QualityAssurance = qaCapellaMobileTransactionINT, Remarks = "Deployed Successfully." };
                Release releaseEStatement = new Release { Title = "Capella E-Statement Feature", Company = companyBAFLAMC, CreatedDate = DateTime.Now, DeployedBy = userInternal1, DeployedDate = DateTime.Now, Description = "Adding First Patch on BAFL AMC Capella SMS Utility On Internal Server", DevelopedBy = userInternal9, EnvironmentType = environmentTypeINT, Environment = environmentBAFLAMCCapellaMainINT, PatchNumber = "SHuhas_Patch_EStatement_26012021_1713", Product = productEStatement, QualityAssurance = qaCapellaEStatementINT, Remarks = "Deployed Successfully." };
                Release releaseCapellaSmsUtility = new Release { Title = "Capella SMS Utility Feature", Company = companyBAFLAMC, CreatedDate = DateTime.Now, DeployedBy = userInternal1, DeployedDate = DateTime.Now, Description = "Adding First Patch on BAFL AMC Capella SMS Utility On Internal Server", DevelopedBy = userInternal9, EnvironmentType = environmentTypeINT, Environment = environmentBAFLAMCCapellaReportingINT, PatchNumber = "SHuhas_Patch_SMSUtility_18-02-2021_1646", Product = productSMSUtility, QualityAssurance = qaCapellaSmsUtilityINT, Remarks = "Deployed Successfully." };

                context.Releases.AddRange(releasePams3G, releasePams4G, releaseCapellaMain, releaseCapellaReporting, releaseCapellaSetup, releaseCapellaOnlinePortal, releaseCapellaMobileTransaction, releaseEStatement, releaseCapellaSmsUtility);
                // Release Logic End

                context.SaveChanges();
            }

        }

        

    }
}
